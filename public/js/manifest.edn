[{:module-id :main, :name :main, :output-name "main.js", :entries [shadow.cljs.devtools.client.console dda.c4k-forgejo.browser], :depends-on nil, :sources ["goog/base.js" "goog/debug/error.js" "goog/dom/nodetype.js" "goog/asserts/asserts.js" "goog/reflect/reflect.js" "goog/math/long.js" "goog/math/integer.js" "goog/dom/asserts.js" "goog/functions/functions.js" "goog/string/typedstring.js" "goog/string/const.js" "goog/i18n/bidi.js" "goog/html/trustedtypes.js" "goog/html/safescript.js" "goog/fs/url.js" "goog/fs/blob.js" "goog/html/trustedresourceurl.js" "goog/string/internal.js" "goog/html/safeurl.js" "goog/html/safestyle.js" "goog/object/object.js" "goog/html/safestylesheet.js" "goog/dom/htmlelement.js" "goog/dom/tagname.js" "goog/array/array.js" "goog/labs/useragent/useragent.js" "goog/labs/useragent/util.js" "goog/labs/useragent/browser.js" "goog/dom/tags.js" "goog/html/safehtml.js" "goog/html/uncheckedconversions.js" "goog/dom/safe.js" "goog/string/string.js" "goog/collections/maps.js" "goog/structs/structs.js" "goog/uri/utils.js" "goog/uri/uri.js" "goog/string/stringbuffer.js" "cljs/core.cljs" "clojure/string.cljs" "shadow/cljs/devtools/client/console.cljs" "cljs/tools/reader/impl/utils.cljs" "cljs/tools/reader/reader_types.cljs" "cljs/tools/reader/impl/inspect.cljs" "cljs/tools/reader/impl/errors.cljs" "cljs/tools/reader/impl/commons.cljs" "cljs/tools/reader.cljs" "cljs/tools/reader/edn.cljs" "clojure/walk.cljs" "cljs/spec/gen/alpha.cljs" "cljs/spec/alpha.cljs" "shadow/js.js" "node_modules/js-yaml/dist/js-yaml.mjs" "orchestra/detail.cljc" "orchestra/core.cljc" "shadow/resource.cljs" "cljs/reader.cljs" "dda/c4k_common/predicate.cljc" "dda/c4k_common/yaml.cljs" "dda/c4k_common/common.cljc" "dda/c4k_common/monitoring.cljc" "dda/c4k_common/ingress.cljc" "node_modules/base64-js/index.js" "node_modules/ieee754/index.js" "node_modules/isarray/index.js" "node_modules/buffer/index.js" "node_modules/js-base64/base64.js" "dda/c4k_common/base64.cljs" "dda/c4k_common/postgres.cljc" "dda/c4k_forgejo/forgejo.cljc" "dda/c4k_forgejo/backup.cljc" "dda/c4k_forgejo/core.cljc" "expound/util.cljc" "expound/paths.cljc" "expound/problems.cljc" "clojure/set.cljs" "cljs/pprint.cljs" "expound/ansi.cljc" "goog/string/stringformat.js" "expound/printer.cljc" "expound/alpha.cljc" "hickory/hiccup_utils.cljc" "hickory/utils.cljc" "hickory/render.cljc" "dda/c4k_common/browser.cljs" "dda/c4k_forgejo/browser.cljs" "shadow/module/main/append.js"]}]