goog.provide('dda.c4k_common.monitoring');
cljs.spec.alpha.def_impl(new cljs.core.Keyword("dda.c4k-common.monitoring","grafana-cloud-user","dda.c4k-common.monitoring/grafana-cloud-user",-502566623),new cljs.core.Symbol("dda.c4k-common.predicate","bash-env-string?","dda.c4k-common.predicate/bash-env-string?",-1836972098,null),dda.c4k_common.predicate.bash_env_string_QMARK_);
cljs.spec.alpha.def_impl(new cljs.core.Keyword("dda.c4k-common.monitoring","grafana-cloud-password","dda.c4k-common.monitoring/grafana-cloud-password",319894619),new cljs.core.Symbol("dda.c4k-common.predicate","bash-env-string?","dda.c4k-common.predicate/bash-env-string?",-1836972098,null),dda.c4k_common.predicate.bash_env_string_QMARK_);
cljs.spec.alpha.def_impl(new cljs.core.Keyword("dda.c4k-common.monitoring","grafana-cloud-url","dda.c4k-common.monitoring/grafana-cloud-url",-294956897),new cljs.core.Symbol("cljs.core","string?","cljs.core/string?",-2072921719,null),cljs.core.string_QMARK_);
cljs.spec.alpha.def_impl(new cljs.core.Keyword("dda.c4k-common.monitoring","cluster-name","dda.c4k-common.monitoring/cluster-name",694606699),new cljs.core.Symbol("cljs.core","string?","cljs.core/string?",-2072921719,null),cljs.core.string_QMARK_);
cljs.spec.alpha.def_impl(new cljs.core.Keyword("dda.c4k-common.monitoring","cluster-stage","dda.c4k-common.monitoring/cluster-stage",-476091222),new cljs.core.Symbol("dda.c4k-common.predicate","stage?","dda.c4k-common.predicate/stage?",-570085781,null),dda.c4k_common.predicate.stage_QMARK_);
cljs.spec.alpha.def_impl(new cljs.core.Keyword("dda.c4k-common.monitoring","pvc-storage-class-name","dda.c4k-common.monitoring/pvc-storage-class-name",1902215062),new cljs.core.Symbol("dda.c4k-common.predicate","pvc-storage-class-name?","dda.c4k-common.predicate/pvc-storage-class-name?",1622691716,null),dda.c4k_common.predicate.pvc_storage_class_name_QMARK_);
cljs.spec.alpha.def_impl(new cljs.core.Keyword("dda.c4k-common.monitoring","node-regex","dda.c4k-common.monitoring/node-regex",1376566887),new cljs.core.Symbol("cljs.core","string?","cljs.core/string?",-2072921719,null),cljs.core.string_QMARK_);
cljs.spec.alpha.def_impl(new cljs.core.Keyword("dda.c4k-common.monitoring","traefik-regex","dda.c4k-common.monitoring/traefik-regex",-628601480),new cljs.core.Symbol("cljs.core","string?","cljs.core/string?",-2072921719,null),cljs.core.string_QMARK_);
cljs.spec.alpha.def_impl(new cljs.core.Keyword("dda.c4k-common.monitoring","kube-state-regex","dda.c4k-common.monitoring/kube-state-regex",1734117227),new cljs.core.Symbol("cljs.core","string?","cljs.core/string?",-2072921719,null),cljs.core.string_QMARK_);
cljs.spec.alpha.def_impl(new cljs.core.Keyword("dda.c4k-common.monitoring","mon-cfg","dda.c4k-common.monitoring/mon-cfg",1085142824),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","keys","cljs.spec.alpha/keys",1109346032,null),new cljs.core.Keyword(null,"req-un","req-un",1074571008),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("dda.c4k-common.monitoring","grafana-cloud-url","dda.c4k-common.monitoring/grafana-cloud-url",-294956897),new cljs.core.Keyword("dda.c4k-common.monitoring","cluster-name","dda.c4k-common.monitoring/cluster-name",694606699),new cljs.core.Keyword("dda.c4k-common.monitoring","cluster-stage","dda.c4k-common.monitoring/cluster-stage",-476091222)], null)),cljs.spec.alpha.map_spec_impl(cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"req-un","req-un",1074571008),new cljs.core.Keyword(null,"opt-un","opt-un",883442496),new cljs.core.Keyword(null,"gfn","gfn",791517474),new cljs.core.Keyword(null,"pred-exprs","pred-exprs",1792271395),new cljs.core.Keyword(null,"keys-pred","keys-pred",858984739),new cljs.core.Keyword(null,"opt-keys","opt-keys",1262688261),new cljs.core.Keyword(null,"req-specs","req-specs",553962313),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.Keyword(null,"req-keys","req-keys",514319221),new cljs.core.Keyword(null,"opt-specs","opt-specs",-384905450),new cljs.core.Keyword(null,"pred-forms","pred-forms",172611832),new cljs.core.Keyword(null,"opt","opt",-794706369)],[new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("dda.c4k-common.monitoring","grafana-cloud-url","dda.c4k-common.monitoring/grafana-cloud-url",-294956897),new cljs.core.Keyword("dda.c4k-common.monitoring","cluster-name","dda.c4k-common.monitoring/cluster-name",694606699),new cljs.core.Keyword("dda.c4k-common.monitoring","cluster-stage","dda.c4k-common.monitoring/cluster-stage",-476091222)], null),null,null,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (G__6166){
return cljs.core.map_QMARK_(G__6166);
}),(function (G__6166){
return cljs.core.contains_QMARK_(G__6166,new cljs.core.Keyword(null,"grafana-cloud-url","grafana-cloud-url",-737300620));
}),(function (G__6166){
return cljs.core.contains_QMARK_(G__6166,new cljs.core.Keyword(null,"cluster-name","cluster-name",-2084812768));
}),(function (G__6166){
return cljs.core.contains_QMARK_(G__6166,new cljs.core.Keyword(null,"cluster-stage","cluster-stage",100272595));
})], null),(function (G__6166){
return ((cljs.core.map_QMARK_(G__6166)) && (((cljs.core.contains_QMARK_(G__6166,new cljs.core.Keyword(null,"grafana-cloud-url","grafana-cloud-url",-737300620))) && (((cljs.core.contains_QMARK_(G__6166,new cljs.core.Keyword(null,"cluster-name","cluster-name",-2084812768))) && (cljs.core.contains_QMARK_(G__6166,new cljs.core.Keyword(null,"cluster-stage","cluster-stage",100272595))))))));
}),cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("dda.c4k-common.monitoring","grafana-cloud-url","dda.c4k-common.monitoring/grafana-cloud-url",-294956897),new cljs.core.Keyword("dda.c4k-common.monitoring","cluster-name","dda.c4k-common.monitoring/cluster-name",694606699),new cljs.core.Keyword("dda.c4k-common.monitoring","cluster-stage","dda.c4k-common.monitoring/cluster-stage",-476091222)], null),null,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"grafana-cloud-url","grafana-cloud-url",-737300620),new cljs.core.Keyword(null,"cluster-name","cluster-name",-2084812768),new cljs.core.Keyword(null,"cluster-stage","cluster-stage",100272595)], null),cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol("cljs.core","fn","cljs.core/fn",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"%","%",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol("cljs.core","map?","cljs.core/map?",-1390345523,null),new cljs.core.Symbol(null,"%","%",-950237169,null))),cljs.core.list(new cljs.core.Symbol("cljs.core","fn","cljs.core/fn",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"%","%",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol("cljs.core","contains?","cljs.core/contains?",-976526835,null),new cljs.core.Symbol(null,"%","%",-950237169,null),new cljs.core.Keyword(null,"grafana-cloud-url","grafana-cloud-url",-737300620))),cljs.core.list(new cljs.core.Symbol("cljs.core","fn","cljs.core/fn",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"%","%",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol("cljs.core","contains?","cljs.core/contains?",-976526835,null),new cljs.core.Symbol(null,"%","%",-950237169,null),new cljs.core.Keyword(null,"cluster-name","cluster-name",-2084812768))),cljs.core.list(new cljs.core.Symbol("cljs.core","fn","cljs.core/fn",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"%","%",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol("cljs.core","contains?","cljs.core/contains?",-976526835,null),new cljs.core.Symbol(null,"%","%",-950237169,null),new cljs.core.Keyword(null,"cluster-stage","cluster-stage",100272595)))], null),null])));
cljs.spec.alpha.def_impl(new cljs.core.Keyword("dda.c4k-common.monitoring","mon-auth","dda.c4k-common.monitoring/mon-auth",-1640156141),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","keys","cljs.spec.alpha/keys",1109346032,null),new cljs.core.Keyword(null,"req-un","req-un",1074571008),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("dda.c4k-common.monitoring","grafana-cloud-user","dda.c4k-common.monitoring/grafana-cloud-user",-502566623),new cljs.core.Keyword("dda.c4k-common.monitoring","grafana-cloud-password","dda.c4k-common.monitoring/grafana-cloud-password",319894619)], null)),cljs.spec.alpha.map_spec_impl(cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"req-un","req-un",1074571008),new cljs.core.Keyword(null,"opt-un","opt-un",883442496),new cljs.core.Keyword(null,"gfn","gfn",791517474),new cljs.core.Keyword(null,"pred-exprs","pred-exprs",1792271395),new cljs.core.Keyword(null,"keys-pred","keys-pred",858984739),new cljs.core.Keyword(null,"opt-keys","opt-keys",1262688261),new cljs.core.Keyword(null,"req-specs","req-specs",553962313),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.Keyword(null,"req-keys","req-keys",514319221),new cljs.core.Keyword(null,"opt-specs","opt-specs",-384905450),new cljs.core.Keyword(null,"pred-forms","pred-forms",172611832),new cljs.core.Keyword(null,"opt","opt",-794706369)],[new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("dda.c4k-common.monitoring","grafana-cloud-user","dda.c4k-common.monitoring/grafana-cloud-user",-502566623),new cljs.core.Keyword("dda.c4k-common.monitoring","grafana-cloud-password","dda.c4k-common.monitoring/grafana-cloud-password",319894619)], null),null,null,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (G__6178){
return cljs.core.map_QMARK_(G__6178);
}),(function (G__6178){
return cljs.core.contains_QMARK_(G__6178,new cljs.core.Keyword(null,"grafana-cloud-user","grafana-cloud-user",1064225238));
}),(function (G__6178){
return cljs.core.contains_QMARK_(G__6178,new cljs.core.Keyword(null,"grafana-cloud-password","grafana-cloud-password",-1347659952));
})], null),(function (G__6178){
return ((cljs.core.map_QMARK_(G__6178)) && (((cljs.core.contains_QMARK_(G__6178,new cljs.core.Keyword(null,"grafana-cloud-user","grafana-cloud-user",1064225238))) && (cljs.core.contains_QMARK_(G__6178,new cljs.core.Keyword(null,"grafana-cloud-password","grafana-cloud-password",-1347659952))))));
}),cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("dda.c4k-common.monitoring","grafana-cloud-user","dda.c4k-common.monitoring/grafana-cloud-user",-502566623),new cljs.core.Keyword("dda.c4k-common.monitoring","grafana-cloud-password","dda.c4k-common.monitoring/grafana-cloud-password",319894619)], null),null,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"grafana-cloud-user","grafana-cloud-user",1064225238),new cljs.core.Keyword(null,"grafana-cloud-password","grafana-cloud-password",-1347659952)], null),cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol("cljs.core","fn","cljs.core/fn",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"%","%",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol("cljs.core","map?","cljs.core/map?",-1390345523,null),new cljs.core.Symbol(null,"%","%",-950237169,null))),cljs.core.list(new cljs.core.Symbol("cljs.core","fn","cljs.core/fn",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"%","%",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol("cljs.core","contains?","cljs.core/contains?",-976526835,null),new cljs.core.Symbol(null,"%","%",-950237169,null),new cljs.core.Keyword(null,"grafana-cloud-user","grafana-cloud-user",1064225238))),cljs.core.list(new cljs.core.Symbol("cljs.core","fn","cljs.core/fn",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"%","%",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol("cljs.core","contains?","cljs.core/contains?",-976526835,null),new cljs.core.Symbol(null,"%","%",-950237169,null),new cljs.core.Keyword(null,"grafana-cloud-password","grafana-cloud-password",-1347659952)))], null),null])));
cljs.spec.alpha.def_impl(new cljs.core.Keyword("dda.c4k-common.monitoring","storage","dda.c4k-common.monitoring/storage",-1779363666),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","keys","cljs.spec.alpha/keys",1109346032,null),new cljs.core.Keyword(null,"opt-un","opt-un",883442496),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("dda.c4k-common.monitoring","pvc-storage-class-name","dda.c4k-common.monitoring/pvc-storage-class-name",1902215062)], null)),cljs.spec.alpha.map_spec_impl(cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"req-un","req-un",1074571008),new cljs.core.Keyword(null,"opt-un","opt-un",883442496),new cljs.core.Keyword(null,"gfn","gfn",791517474),new cljs.core.Keyword(null,"pred-exprs","pred-exprs",1792271395),new cljs.core.Keyword(null,"keys-pred","keys-pred",858984739),new cljs.core.Keyword(null,"opt-keys","opt-keys",1262688261),new cljs.core.Keyword(null,"req-specs","req-specs",553962313),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.Keyword(null,"req-keys","req-keys",514319221),new cljs.core.Keyword(null,"opt-specs","opt-specs",-384905450),new cljs.core.Keyword(null,"pred-forms","pred-forms",172611832),new cljs.core.Keyword(null,"opt","opt",-794706369)],[null,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("dda.c4k-common.monitoring","pvc-storage-class-name","dda.c4k-common.monitoring/pvc-storage-class-name",1902215062)], null),null,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (G__6181){
return cljs.core.map_QMARK_(G__6181);
})], null),(function (G__6181){
return cljs.core.map_QMARK_(G__6181);
}),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"pvc-storage-class-name","pvc-storage-class-name",1271488579)], null),cljs.core.PersistentVector.EMPTY,null,cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("dda.c4k-common.monitoring","pvc-storage-class-name","dda.c4k-common.monitoring/pvc-storage-class-name",1902215062)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol("cljs.core","fn","cljs.core/fn",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"%","%",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol("cljs.core","map?","cljs.core/map?",-1390345523,null),new cljs.core.Symbol(null,"%","%",-950237169,null)))], null),null])));
cljs.spec.alpha.def_impl(new cljs.core.Keyword("dda.c4k-common.monitoring","filter-regex","dda.c4k-common.monitoring/filter-regex",1913166803),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","keys","cljs.spec.alpha/keys",1109346032,null),new cljs.core.Keyword(null,"req-un","req-un",1074571008),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("dda.c4k-common.monitoring","node-regex","dda.c4k-common.monitoring/node-regex",1376566887),new cljs.core.Keyword("dda.c4k-common.monitoring","traefik-regex","dda.c4k-common.monitoring/traefik-regex",-628601480),new cljs.core.Keyword("dda.c4k-common.monitoring","kube-state-regex","dda.c4k-common.monitoring/kube-state-regex",1734117227)], null)),cljs.spec.alpha.map_spec_impl(cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"req-un","req-un",1074571008),new cljs.core.Keyword(null,"opt-un","opt-un",883442496),new cljs.core.Keyword(null,"gfn","gfn",791517474),new cljs.core.Keyword(null,"pred-exprs","pred-exprs",1792271395),new cljs.core.Keyword(null,"keys-pred","keys-pred",858984739),new cljs.core.Keyword(null,"opt-keys","opt-keys",1262688261),new cljs.core.Keyword(null,"req-specs","req-specs",553962313),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.Keyword(null,"req-keys","req-keys",514319221),new cljs.core.Keyword(null,"opt-specs","opt-specs",-384905450),new cljs.core.Keyword(null,"pred-forms","pred-forms",172611832),new cljs.core.Keyword(null,"opt","opt",-794706369)],[new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("dda.c4k-common.monitoring","node-regex","dda.c4k-common.monitoring/node-regex",1376566887),new cljs.core.Keyword("dda.c4k-common.monitoring","traefik-regex","dda.c4k-common.monitoring/traefik-regex",-628601480),new cljs.core.Keyword("dda.c4k-common.monitoring","kube-state-regex","dda.c4k-common.monitoring/kube-state-regex",1734117227)], null),null,null,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (G__6182){
return cljs.core.map_QMARK_(G__6182);
}),(function (G__6182){
return cljs.core.contains_QMARK_(G__6182,new cljs.core.Keyword(null,"node-regex","node-regex",881220434));
}),(function (G__6182){
return cljs.core.contains_QMARK_(G__6182,new cljs.core.Keyword(null,"traefik-regex","traefik-regex",-1121191797));
}),(function (G__6182){
return cljs.core.contains_QMARK_(G__6182,new cljs.core.Keyword(null,"kube-state-regex","kube-state-regex",-2050611130));
})], null),(function (G__6182){
return ((cljs.core.map_QMARK_(G__6182)) && (((cljs.core.contains_QMARK_(G__6182,new cljs.core.Keyword(null,"node-regex","node-regex",881220434))) && (((cljs.core.contains_QMARK_(G__6182,new cljs.core.Keyword(null,"traefik-regex","traefik-regex",-1121191797))) && (cljs.core.contains_QMARK_(G__6182,new cljs.core.Keyword(null,"kube-state-regex","kube-state-regex",-2050611130))))))));
}),cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("dda.c4k-common.monitoring","node-regex","dda.c4k-common.monitoring/node-regex",1376566887),new cljs.core.Keyword("dda.c4k-common.monitoring","traefik-regex","dda.c4k-common.monitoring/traefik-regex",-628601480),new cljs.core.Keyword("dda.c4k-common.monitoring","kube-state-regex","dda.c4k-common.monitoring/kube-state-regex",1734117227)], null),null,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"node-regex","node-regex",881220434),new cljs.core.Keyword(null,"traefik-regex","traefik-regex",-1121191797),new cljs.core.Keyword(null,"kube-state-regex","kube-state-regex",-2050611130)], null),cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol("cljs.core","fn","cljs.core/fn",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"%","%",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol("cljs.core","map?","cljs.core/map?",-1390345523,null),new cljs.core.Symbol(null,"%","%",-950237169,null))),cljs.core.list(new cljs.core.Symbol("cljs.core","fn","cljs.core/fn",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"%","%",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol("cljs.core","contains?","cljs.core/contains?",-976526835,null),new cljs.core.Symbol(null,"%","%",-950237169,null),new cljs.core.Keyword(null,"node-regex","node-regex",881220434))),cljs.core.list(new cljs.core.Symbol("cljs.core","fn","cljs.core/fn",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"%","%",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol("cljs.core","contains?","cljs.core/contains?",-976526835,null),new cljs.core.Symbol(null,"%","%",-950237169,null),new cljs.core.Keyword(null,"traefik-regex","traefik-regex",-1121191797))),cljs.core.list(new cljs.core.Symbol("cljs.core","fn","cljs.core/fn",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"%","%",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol("cljs.core","contains?","cljs.core/contains?",-976526835,null),new cljs.core.Symbol(null,"%","%",-950237169,null),new cljs.core.Keyword(null,"kube-state-regex","kube-state-regex",-2050611130)))], null),null])));
dda.c4k_common.monitoring.metric_regex = new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"node-regex","node-regex",881220434),["node_cpu_sec.+|node_load[0-9]+|node_memory_Buf.*|node_memory_Mem.*|","node_memory_Cached.*|node_disk_[r,w,i].*|node_filesystem_[s,a].*|","node_network_receive_bytes_total|node_network_transmit_bytes_total"].join(''),new cljs.core.Keyword(null,"traefik-regex","traefik-regex",-1121191797),["traefik_entrypoint_.*_total|","traefik_entrypoint_.*_seconds_count|","traefik_router_.*_total|","traefik_router_.*_seconds_count|","traefik_service_.*_total|","traefik_service_.*_seconds_count|","traefik_tls_certs_not_after"].join(''),new cljs.core.Keyword(null,"kube-state-regex","kube-state-regex",-2050611130),["kube_pod_container_status_restarts_total|","kube_pod_status_reason|kube_node_status_capacity|kube_node_status_allocatable|","kube_cronjob_status_active|kube_job_status_failed"].join('')], null);
dda.c4k_common.monitoring.filter_regex_string = clojure.string.join.cljs$core$IFn$_invoke$arity$2("|",cljs.core.vals(dda.c4k_common.monitoring.metric_regex));
dda.c4k_common.yaml.load_resource.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,"monitoring","monitoring",-274976896),(function (resource_name){
var G__6187 = resource_name;
switch (G__6187) {
case "monitoring/namespace.yaml":
return "kind: Namespace\napiVersion: v1\nmetadata:\n  name: monitoring\n  labels:\n    name: monitoring";

break;
case "monitoring/kube-state-metrics/cluster-role-binding.yaml":
return "# from https://github.com/kubernetes/kube-state-metrics/tree/main/examples/standard\napiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRoleBinding\nmetadata:\n  labels:\n    app.kubernetes.io/component: exporter\n    app.kubernetes.io/name: kube-state-metrics\n    app.kubernetes.io/version: 2.7.0\n  name: kube-state-metrics\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: kube-state-metrics\nsubjects:\n- kind: ServiceAccount\n  name: kube-state-metrics\n  namespace: monitoring\n";

break;
case "monitoring/kube-state-metrics/cluster-role.yaml":
return "apiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRole\nmetadata:\n  labels:\n    app.kubernetes.io/component: exporter\n    app.kubernetes.io/name: kube-state-metrics\n    app.kubernetes.io/version: 2.7.0\n  name: kube-state-metrics\nrules:\n- apiGroups:\n  - \"\"\n  resources:\n  - configmaps\n  - secrets\n  - nodes\n  - pods\n  - services\n  - serviceaccounts\n  - resourcequotas\n  - replicationcontrollers\n  - limitranges\n  - persistentvolumeclaims\n  - persistentvolumes\n  - namespaces\n  - endpoints\n  verbs:\n  - list\n  - watch\n- apiGroups:\n  - apps\n  resources:\n  - statefulsets\n  - daemonsets\n  - deployments\n  - replicasets\n  verbs:\n  - list\n  - watch\n- apiGroups:\n  - batch\n  resources:\n  - cronjobs\n  - jobs\n  verbs:\n  - list\n  - watch\n- apiGroups:\n  - autoscaling\n  resources:\n  - horizontalpodautoscalers\n  verbs:\n  - list\n  - watch\n- apiGroups:\n  - authentication.k8s.io\n  resources:\n  - tokenreviews\n  verbs:\n  - create\n- apiGroups:\n  - authorization.k8s.io\n  resources:\n  - subjectaccessreviews\n  verbs:\n  - create\n- apiGroups:\n  - policy\n  resources:\n  - poddisruptionbudgets\n  verbs:\n  - list\n  - watch\n- apiGroups:\n  - certificates.k8s.io\n  resources:\n  - certificatesigningrequests\n  verbs:\n  - list\n  - watch\n- apiGroups:\n  - discovery.k8s.io\n  resources:\n  - endpointslices\n  verbs:\n  - list\n  - watch\n- apiGroups:\n  - storage.k8s.io\n  resources:\n  - storageclasses\n  - volumeattachments\n  verbs:\n  - list\n  - watch\n- apiGroups:\n  - admissionregistration.k8s.io\n  resources:\n  - mutatingwebhookconfigurations\n  - validatingwebhookconfigurations\n  verbs:\n  - list\n  - watch\n- apiGroups:\n  - networking.k8s.io\n  resources:\n  - networkpolicies\n  - ingressclasses\n  - ingresses\n  verbs:\n  - list\n  - watch\n- apiGroups:\n  - coordination.k8s.io\n  resources:\n  - leases\n  verbs:\n  - list\n  - watch\n- apiGroups:\n  - rbac.authorization.k8s.io\n  resources:\n  - clusterrolebindings\n  - clusterroles\n  - rolebindings\n  - roles\n  verbs:\n  - list\n  - watch\n";

break;
case "monitoring/kube-state-metrics/deployment.yaml":
return "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  labels:\n    app.kubernetes.io/component: exporter\n    app.kubernetes.io/name: kube-state-metrics\n    app.kubernetes.io/version: 2.7.0\n  name: kube-state-metrics\n  namespace: monitoring\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app.kubernetes.io/name: kube-state-metrics\n  template:\n    metadata:\n      labels:\n        app.kubernetes.io/component: exporter\n        app.kubernetes.io/name: kube-state-metrics\n        app.kubernetes.io/version: 2.7.0\n    spec:\n      serviceAccountName: kube-state-metrics\n      automountServiceAccountToken: true\n      containers:\n      - name: kube-state-metrics\n        image: registry.k8s.io/kube-state-metrics/kube-state-metrics:v2.7.0\n        livenessProbe:\n          httpGet:\n            path: /healthz\n            port: 8080\n          initialDelaySeconds: 5\n          timeoutSeconds: 5        \n        ports:\n        - containerPort: 8080\n          name: http-metrics\n        - containerPort: 8081\n          name: telemetry\n        readinessProbe:\n          httpGet:\n            path: /\n            port: 8081\n          initialDelaySeconds: 5\n          timeoutSeconds: 5\n        securityContext:\n          allowPrivilegeEscalation: false\n          capabilities:\n            drop:\n            - ALL\n          readOnlyRootFilesystem: true\n          runAsUser: 65534\n      nodeSelector:\n        kubernetes.io/os: linux\n      \n";

break;
case "monitoring/kube-state-metrics/service-account.yaml":
return "apiVersion: v1\nautomountServiceAccountToken: false\nkind: ServiceAccount\nmetadata:\n  labels:\n    app.kubernetes.io/component: exporter\n    app.kubernetes.io/name: kube-state-metrics\n    app.kubernetes.io/version: 2.7.0\n  name: kube-state-metrics\n  namespace: monitoring\n";

break;
case "monitoring/kube-state-metrics/service.yaml":
return "apiVersion: v1\nkind: Service\nmetadata:\n  labels:\n    app.kubernetes.io/component: exporter\n    app.kubernetes.io/name: kube-state-metrics\n    app.kubernetes.io/version: 2.7.0\n  name: kube-state-metrics\n  namespace: monitoring\nspec:\n  clusterIP: None\n  ports:\n  - name: http-metrics\n    port: 8080\n    targetPort: http-metrics\n  - name: telemetry\n    port: 8081\n    targetPort: telemetry\n  selector:\n    app.kubernetes.io/name: kube-state-metrics\n";

break;
case "monitoring/node-exporter/cluster-role-binding.yaml":
return "apiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRoleBinding\nmetadata:\n  labels:\n    name: node-exporter\n  name: node-exporter\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: node-exporter\nsubjects:\n- kind: ServiceAccount\n  name: node-exporter\n  namespace: monitoring";

break;
case "monitoring/node-exporter/cluster-role.yaml":
return "apiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRole\nmetadata:\n  labels:\n    name: node-exporter\n  name: node-exporter\nrules:\n- apiGroups:\n  - \"\"\n  resources:\n  - nodes\n  - nodes/proxy\n  - nodes/metrics\n  - services\n  - endpoints\n  - pods\n  - ingresses\n  - configmaps\n  - events\n  verbs:\n  - get\n  - list\n  - watch\n- apiGroups:\n  - \"extensions\"\n  - \"networking.k8s.io\"\n  resources:\n  - ingresses/status\n  - ingresses\n  verbs:\n  - get\n  - list\n  - watch\n- apiGroups:\n  - extensions\n  resources:\n  - podsecuritypolicies\n  verbs:     \n  - use\n  resourceNames: \n  - node-exporter\n- nonResourceURLs:\n  - /metrics\n  verbs:\n  - get\n";

break;
case "monitoring/node-exporter/daemon-set.yaml":
return "apiVersion: apps/v1\nkind: DaemonSet\nmetadata:\n  labels:\n    app.kubernetes.io/name: node-exporter\n  name: node-exporter\n  namespace: monitoring\nspec:\n  selector:\n    matchLabels:\n      app.kubernetes.io/name: node-exporter\n  template:\n    metadata:\n      labels:\n        app.kubernetes.io/name: node-exporter\n    spec:\n      serviceAccountName: node-exporter\n      containers:\n      - name: node-exporter\n        image: prom/node-exporter\n        imagePullPolicy: \"IfNotPresent\"\n        args:\n          - --path.sysfs=/host/sys\n          - --path.rootfs=/host/root\n          - --no-collector.conntrack\n          - --no-collector.wifi\n          - --no-collector.hwmon\n          - --no-collector.infiniband\n          - --no-collector.filefd\n          - --no-collector.mdadm\n          - --no-collector.netclass\n          - --no-collector.nfs\n          - --no-collector.nfsd\n          - --no-collector.powersupplyclass\n          - --no-collector.pressure\n          - --no-collector.rapl\n          - --no-collector.schedstat\n          - --no-collector.sockstat\n          - --no-collector.softnet\n          - --no-collector.tapestats\n          - --no-collector.thermal_zone\n          - --no-collector.xfs\n          - --no-collector.zfs\n          - --collector.filesystem.ignored-mount-points=^/(dev|proc|sys|var/lib/docker/.+|var/lib/kubelet/pods/.+)($|/)\n          - --collector.netclass.ignored-devices=^(veth.*)$\n        ports:\n          - containerPort: 9100\n            protocol: TCP\n        resources:\n          limits:\n            cpu: 250m\n            memory: 180Mi\n          requests:\n            cpu: 102m\n            memory: 180Mi\n        volumeMounts:\n        - mountPath: /host/sys\n          mountPropagation: HostToContainer\n          name: sys\n          readOnly: true\n        - mountPath: /host/root\n          mountPropagation: HostToContainer\n          name: root\n          readOnly: true\n      volumes:\n      - hostPath:\n          path: /sys\n        name: sys\n      - hostPath:\n          path: /\n        name: root\n";

break;
case "monitoring/node-exporter/service-account.yaml":
return "apiVersion: v1\nkind: ServiceAccount\nmetadata:\n  labels:\n    name: node-exporter\n  name: node-exporter\n  namespace: monitoring\n";

break;
case "monitoring/node-exporter/service.yaml":
return "kind: Service\napiVersion: v1\nmetadata:\n  name: node-exporter\n  namespace: monitoring\n  labels:\n    app.kubernetes.io/name: node-exporter\n  annotations:\n      prometheus.io/scrape: 'true'\n      prometheus.io/port:   '9100'\nspec:\n  selector:\n      app.kubernetes.io/name: node-exporter\n  ports:\n  - name: node-exporter-http\n    protocol: TCP\n    port: 9100\n    targetPort: 9100";

break;
case "monitoring/prometheus/cluster-role-binding.yaml":
return "apiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRoleBinding\nmetadata:\n  labels:\n    name: prometheus\n  name: prometheus\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: prometheus\nsubjects:\n- kind: ServiceAccount\n  name: prometheus\n  namespace: monitoring";

break;
case "monitoring/prometheus/cluster-role.yaml":
return "apiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRole\nmetadata:\n  labels:\n    name: prometheus\n  name: prometheus\nrules:\n- apiGroups:\n  - \"\"\n  resources:\n  - nodes\n  - nodes/proxy\n  - nodes/metrics\n  - services\n  - endpoints\n  - pods\n  - ingresses\n  - configmaps\n  - events\n  verbs:\n  - get\n  - list\n  - watch\n- apiGroups:\n  - \"extensions\"\n  - \"networking.k8s.io\"\n  resources:\n  - ingresses/status\n  - ingresses\n  verbs:\n  - get\n  - list\n  - watch\n- nonResourceURLs:\n  - /metrics\n  verbs:\n  - get\n";

break;
case "monitoring/prometheus/config.yaml":
return "apiVersion: v1\nkind: Secret\nmetadata:\n  name: prometheus-conf\n  namespace: monitoring\ntype: Opaque\nstringData:\n  prometheus.yaml: FILECONTENT\n";

break;
case "monitoring/prometheus/deployment.yaml":
return "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  labels:\n    app.kubernetes.io/name: prometheus\n  name: prometheus\n  namespace: monitoring\nspec:\n  selector:\n    matchLabels:\n      app.kubernetes.io/name: prometheus\n  replicas: 1\n  template:\n    metadata:\n      labels:\n        app.kubernetes.io/name: prometheus\n    spec:\n      serviceAccountName: prometheus\n      enableServiceLinks: true\n      containers:\n        - name: prometheus\n          image: \"quay.io/prometheus/prometheus:v2.39.1\"\n          imagePullPolicy: \"IfNotPresent\"\n          args:\n            - --config.file=/etc/prometheus/prometheus.yaml\n            - --storage.tsdb.path=/prometheus/\n            - --storage.tsdb.retention.time=1d\n          ports:\n            - containerPort: 9090\n          volumeMounts:\n            - name: prometheus-config-volume\n              mountPath: /etc/prometheus/\n              readOnly: true\n            - name: prometheus-storage-volume\n              mountPath: /prometheus/\n      volumes:\n        - name: prometheus-config-volume\n          secret:\n            secretName: prometheus-conf\n            defaultMode: 420\n        - name: prometheus-storage-volume\n          emptyDir: {}\n";

break;
case "monitoring/prometheus/prometheus.yaml":
return "global:\n  scrape_interval: 60s\n  evaluation_interval: 60s\n  external_labels:\n    cluster: $CLUSTERNAME\n    stage: $TEST_OR_PROD\nremote_write:\n  - url: GRAFANA_CLOUD_URL\n    basic_auth:\n      username: GRAFANA_CLOUD_USER\n      password: GRAFANA_CLOUD_PASSWORD\n    write_relabel_configs:\n    - source_labels:\n      - __name__\n      regex: FILTER_REGEX\n      action: keep\nrule_files:\n  - /etc/prometheus/prometheus.rules\nscrape_configs:\n\n  - job_name: 'kubernetes-nodes'\n    kubernetes_sd_configs:\n    - role: node\n    scheme: https\n    tls_config:\n      ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt\n    bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n    relabel_configs:\n    - action: labelmap\n      regex: __meta_kubernetes_node_label_(.+)\n    - target_label: __address__\n      replacement: kubernetes.default.svc:443\n    - source_labels: [__meta_kubernetes_node_name]\n      regex: (.+)\n      target_label: __metrics_path__\n      replacement: /api/v1/nodes/${1}/proxy/metrics\n\n  - job_name: 'node-exporter'\n    kubernetes_sd_configs:\n      - role: endpoints\n    relabel_configs:\n    - source_labels: [__meta_kubernetes_endpoints_name]\n      regex: 'node-exporter'\n      action: keep\n\n  - job_name: 'traefik'\n    kubernetes_sd_configs:\n      - role: endpoints\n    relabel_configs:\n    - source_labels: [__meta_kubernetes_endpoints_name]\n      regex: 'traefik'\n      action: keep\n\n  - job_name: 'kube-state-metrics'\n    kubernetes_sd_configs:\n      - role: endpoints\n    relabel_configs:\n    - source_labels: [__meta_kubernetes_endpoints_name]\n      regex: 'kube-state-metrics'\n      action: keep\n\n  - job_name: \"prometheus\"\n    static_configs:\n      - targets: [\"localhost:9090\"]\n";

break;
case "monitoring/prometheus/service-account.yaml":
return "apiVersion: v1\nkind: ServiceAccount\nautomountServiceAccountToken: true\nmetadata:\n  labels:\n    name: prometheus\n  name: prometheus\n  namespace: monitoring\n";

break;
case "monitoring/prometheus/service.yaml":
return "apiVersion: v1\nkind: Service\nmetadata:\n  name: prometheus\n  namespace: monitoring\n  labels:\n    app.kubernetes.io/name: prometheus\n  annotations:\n    metallb.universe.tf/address-pool: private\nspec:\n  type: LoadBalancer\n  selector:\n    app.kubernetes.io/name: prometheus\n  ports:\n  - name: prometheus-http\n    protocol: TCP\n    port: 9000\n    targetPort: 9090\n";

break;
default:
throw (new Error("Undefined Resource!"));

}
}));
/**
 * 
 */
dda.c4k_common.monitoring.generate_stateful_set = (function dda$c4k_common$monitoring$generate_stateful_set(config){
var map__6190 = config;
var map__6190__$1 = cljs.core.__destructure_map(map__6190);
var pvc_storage_class_name = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__6190__$1,new cljs.core.Keyword(null,"pvc-storage-class-name","pvc-storage-class-name",1271488579),new cljs.core.Keyword(null,"manual","manual",-237370608));
return cljs.core.assoc_in(dda.c4k_common.yaml.load_as_edn("monitoring/stateful-set.yaml"),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"spec","spec",347520401),new cljs.core.Keyword(null,"volumeClaimTemplates","volumeClaimTemplates",939815937),(0),new cljs.core.Keyword(null,"spec","spec",347520401),new cljs.core.Keyword(null,"storageClassName","storageClassName",2060039872)], null),cljs.core.name(pvc_storage_class_name));
});

cljs.spec.alpha.def_impl(new cljs.core.Symbol("dda.c4k-common.monitoring","generate-stateful-set","dda.c4k-common.monitoring/generate-stateful-set",-1228524259,null),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","fspec","cljs.spec.alpha/fspec",-1289128341,null),new cljs.core.Keyword(null,"args","args",1315556576),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"config","config",994861415),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","spec","cljs.spec.alpha/spec",-707298191,null),new cljs.core.Keyword("dda.c4k-common.monitoring","storage","dda.c4k-common.monitoring/storage",-1779363666))),new cljs.core.Keyword(null,"fn","fn",-1175266204),null,new cljs.core.Keyword(null,"ret","ret",-468222814),new cljs.core.Symbol("dda.c4k-common.predicate","map-or-seq?","dda.c4k-common.predicate/map-or-seq?",-1443028642,null)),cljs.spec.alpha.fspec_impl(cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"config","config",994861415),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","spec","cljs.spec.alpha/spec",-707298191,null),new cljs.core.Keyword("dda.c4k-common.monitoring","storage","dda.c4k-common.monitoring/storage",-1779363666))),cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"config","config",994861415)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(new cljs.core.Keyword("dda.c4k-common.monitoring","storage","dda.c4k-common.monitoring/storage",-1779363666),new cljs.core.Keyword("dda.c4k-common.monitoring","storage","dda.c4k-common.monitoring/storage",-1779363666),null,null)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","spec","cljs.spec.alpha/spec",-707298191,null),new cljs.core.Keyword("dda.c4k-common.monitoring","storage","dda.c4k-common.monitoring/storage",-1779363666))], null)),null,null),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"config","config",994861415),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","spec","cljs.spec.alpha/spec",-707298191,null),new cljs.core.Keyword("dda.c4k-common.monitoring","storage","dda.c4k-common.monitoring/storage",-1779363666))),cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(new cljs.core.Symbol("dda.c4k-common.predicate","map-or-seq?","dda.c4k-common.predicate/map-or-seq?",-1443028642,null),dda.c4k_common.predicate.map_or_seq_QMARK_,null,null),new cljs.core.Symbol("dda.c4k-common.predicate","map-or-seq?","dda.c4k-common.predicate/map-or-seq?",-1443028642,null),null,null,null));
/**
 * 
 */
dda.c4k_common.monitoring.generate_prometheus_config = (function dda$c4k_common$monitoring$generate_prometheus_config(config,auth){
var map__6192 = config;
var map__6192__$1 = cljs.core.__destructure_map(map__6192);
var grafana_cloud_url = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__6192__$1,new cljs.core.Keyword(null,"grafana-cloud-url","grafana-cloud-url",-737300620));
var cluster_name = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__6192__$1,new cljs.core.Keyword(null,"cluster-name","cluster-name",-2084812768));
var cluster_stage = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__6192__$1,new cljs.core.Keyword(null,"cluster-stage","cluster-stage",100272595));
var map__6193 = auth;
var map__6193__$1 = cljs.core.__destructure_map(map__6193);
var grafana_cloud_user = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__6193__$1,new cljs.core.Keyword(null,"grafana-cloud-user","grafana-cloud-user",1064225238));
var grafana_cloud_password = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__6193__$1,new cljs.core.Keyword(null,"grafana-cloud-password","grafana-cloud-password",-1347659952));
return dda.c4k_common.common.replace_all_matching_values_by_new_value(cljs.core.assoc_in(cljs.core.assoc_in(cljs.core.assoc_in(cljs.core.assoc_in(cljs.core.assoc_in(dda.c4k_common.yaml.load_as_edn("monitoring/prometheus/prometheus.yaml"),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"global","global",93595047),new cljs.core.Keyword(null,"external_labels","external_labels",2065949243),new cljs.core.Keyword(null,"cluster","cluster",535175621)], null),cluster_name),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"global","global",93595047),new cljs.core.Keyword(null,"external_labels","external_labels",2065949243),new cljs.core.Keyword(null,"stage","stage",1843544772)], null),cluster_stage),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"remote_write","remote_write",-1782493757),(0),new cljs.core.Keyword(null,"url","url",276297046)], null),grafana_cloud_url),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"remote_write","remote_write",-1782493757),(0),new cljs.core.Keyword(null,"basic_auth","basic_auth",-57479948),new cljs.core.Keyword(null,"username","username",1605666410)], null),grafana_cloud_user),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"remote_write","remote_write",-1782493757),(0),new cljs.core.Keyword(null,"basic_auth","basic_auth",-57479948),new cljs.core.Keyword(null,"password","password",417022471)], null),grafana_cloud_password),"FILTER_REGEX",dda.c4k_common.monitoring.filter_regex_string);
});

cljs.spec.alpha.def_impl(new cljs.core.Symbol("dda.c4k-common.monitoring","generate-prometheus-config","dda.c4k-common.monitoring/generate-prometheus-config",1593863525,null),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","fspec","cljs.spec.alpha/fspec",-1289128341,null),new cljs.core.Keyword(null,"args","args",1315556576),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"config","config",994861415),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","spec","cljs.spec.alpha/spec",-707298191,null),new cljs.core.Keyword("dda.c4k-common.monitoring","mon-cfg","dda.c4k-common.monitoring/mon-cfg",1085142824)),new cljs.core.Keyword(null,"auth","auth",1389754926),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","spec","cljs.spec.alpha/spec",-707298191,null),new cljs.core.Keyword("dda.c4k-common.monitoring","mon-auth","dda.c4k-common.monitoring/mon-auth",-1640156141))),new cljs.core.Keyword(null,"fn","fn",-1175266204),null,new cljs.core.Keyword(null,"ret","ret",-468222814),new cljs.core.Symbol("dda.c4k-common.predicate","map-or-seq?","dda.c4k-common.predicate/map-or-seq?",-1443028642,null)),cljs.spec.alpha.fspec_impl(cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"config","config",994861415),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","spec","cljs.spec.alpha/spec",-707298191,null),new cljs.core.Keyword("dda.c4k-common.monitoring","mon-cfg","dda.c4k-common.monitoring/mon-cfg",1085142824)),new cljs.core.Keyword(null,"auth","auth",1389754926),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","spec","cljs.spec.alpha/spec",-707298191,null),new cljs.core.Keyword("dda.c4k-common.monitoring","mon-auth","dda.c4k-common.monitoring/mon-auth",-1640156141))),cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"config","config",994861415),new cljs.core.Keyword(null,"auth","auth",1389754926)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(new cljs.core.Keyword("dda.c4k-common.monitoring","mon-cfg","dda.c4k-common.monitoring/mon-cfg",1085142824),new cljs.core.Keyword("dda.c4k-common.monitoring","mon-cfg","dda.c4k-common.monitoring/mon-cfg",1085142824),null,null),cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(new cljs.core.Keyword("dda.c4k-common.monitoring","mon-auth","dda.c4k-common.monitoring/mon-auth",-1640156141),new cljs.core.Keyword("dda.c4k-common.monitoring","mon-auth","dda.c4k-common.monitoring/mon-auth",-1640156141),null,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","spec","cljs.spec.alpha/spec",-707298191,null),new cljs.core.Keyword("dda.c4k-common.monitoring","mon-cfg","dda.c4k-common.monitoring/mon-cfg",1085142824)),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","spec","cljs.spec.alpha/spec",-707298191,null),new cljs.core.Keyword("dda.c4k-common.monitoring","mon-auth","dda.c4k-common.monitoring/mon-auth",-1640156141))], null)),null,null),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"config","config",994861415),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","spec","cljs.spec.alpha/spec",-707298191,null),new cljs.core.Keyword("dda.c4k-common.monitoring","mon-cfg","dda.c4k-common.monitoring/mon-cfg",1085142824)),new cljs.core.Keyword(null,"auth","auth",1389754926),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","spec","cljs.spec.alpha/spec",-707298191,null),new cljs.core.Keyword("dda.c4k-common.monitoring","mon-auth","dda.c4k-common.monitoring/mon-auth",-1640156141))),cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(new cljs.core.Symbol("dda.c4k-common.predicate","map-or-seq?","dda.c4k-common.predicate/map-or-seq?",-1443028642,null),dda.c4k_common.predicate.map_or_seq_QMARK_,null,null),new cljs.core.Symbol("dda.c4k-common.predicate","map-or-seq?","dda.c4k-common.predicate/map-or-seq?",-1443028642,null),null,null,null));
/**
 * 
 */
dda.c4k_common.monitoring.generate_config = (function dda$c4k_common$monitoring$generate_config(config,auth){
return cljs.core.assoc_in(dda.c4k_common.yaml.load_as_edn("monitoring/prometheus/config.yaml"),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"stringData","stringData",-1527693615),new cljs.core.Keyword(null,"prometheus.yaml","prometheus.yaml",248608357)], null),dda.c4k_common.yaml.to_string(dda.c4k_common.monitoring.generate_prometheus_config(config,auth)));
});

cljs.spec.alpha.def_impl(new cljs.core.Symbol("dda.c4k-common.monitoring","generate-config","dda.c4k-common.monitoring/generate-config",-2106761865,null),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","fspec","cljs.spec.alpha/fspec",-1289128341,null),new cljs.core.Keyword(null,"args","args",1315556576),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"config","config",994861415),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","spec","cljs.spec.alpha/spec",-707298191,null),new cljs.core.Keyword("dda.c4k-common.monitoring","mon-cfg","dda.c4k-common.monitoring/mon-cfg",1085142824)),new cljs.core.Keyword(null,"auth","auth",1389754926),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","spec","cljs.spec.alpha/spec",-707298191,null),new cljs.core.Keyword("dda.c4k-common.monitoring","mon-auth","dda.c4k-common.monitoring/mon-auth",-1640156141))),new cljs.core.Keyword(null,"fn","fn",-1175266204),null,new cljs.core.Keyword(null,"ret","ret",-468222814),new cljs.core.Symbol("dda.c4k-common.predicate","map-or-seq?","dda.c4k-common.predicate/map-or-seq?",-1443028642,null)),cljs.spec.alpha.fspec_impl(cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"config","config",994861415),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","spec","cljs.spec.alpha/spec",-707298191,null),new cljs.core.Keyword("dda.c4k-common.monitoring","mon-cfg","dda.c4k-common.monitoring/mon-cfg",1085142824)),new cljs.core.Keyword(null,"auth","auth",1389754926),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","spec","cljs.spec.alpha/spec",-707298191,null),new cljs.core.Keyword("dda.c4k-common.monitoring","mon-auth","dda.c4k-common.monitoring/mon-auth",-1640156141))),cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"config","config",994861415),new cljs.core.Keyword(null,"auth","auth",1389754926)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(new cljs.core.Keyword("dda.c4k-common.monitoring","mon-cfg","dda.c4k-common.monitoring/mon-cfg",1085142824),new cljs.core.Keyword("dda.c4k-common.monitoring","mon-cfg","dda.c4k-common.monitoring/mon-cfg",1085142824),null,null),cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(new cljs.core.Keyword("dda.c4k-common.monitoring","mon-auth","dda.c4k-common.monitoring/mon-auth",-1640156141),new cljs.core.Keyword("dda.c4k-common.monitoring","mon-auth","dda.c4k-common.monitoring/mon-auth",-1640156141),null,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","spec","cljs.spec.alpha/spec",-707298191,null),new cljs.core.Keyword("dda.c4k-common.monitoring","mon-cfg","dda.c4k-common.monitoring/mon-cfg",1085142824)),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","spec","cljs.spec.alpha/spec",-707298191,null),new cljs.core.Keyword("dda.c4k-common.monitoring","mon-auth","dda.c4k-common.monitoring/mon-auth",-1640156141))], null)),null,null),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"config","config",994861415),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","spec","cljs.spec.alpha/spec",-707298191,null),new cljs.core.Keyword("dda.c4k-common.monitoring","mon-cfg","dda.c4k-common.monitoring/mon-cfg",1085142824)),new cljs.core.Keyword(null,"auth","auth",1389754926),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","spec","cljs.spec.alpha/spec",-707298191,null),new cljs.core.Keyword("dda.c4k-common.monitoring","mon-auth","dda.c4k-common.monitoring/mon-auth",-1640156141))),cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(new cljs.core.Symbol("dda.c4k-common.predicate","map-or-seq?","dda.c4k-common.predicate/map-or-seq?",-1443028642,null),dda.c4k_common.predicate.map_or_seq_QMARK_,null,null),new cljs.core.Symbol("dda.c4k-common.predicate","map-or-seq?","dda.c4k-common.predicate/map-or-seq?",-1443028642,null),null,null,null));
/**
 * 
 */
dda.c4k_common.monitoring.generate = (function dda$c4k_common$monitoring$generate(config,auth){
return new cljs.core.PersistentVector(null, 17, 5, cljs.core.PersistentVector.EMPTY_NODE, [dda.c4k_common.yaml.load_as_edn("monitoring/namespace.yaml"),dda.c4k_common.yaml.load_as_edn("monitoring/prometheus/cluster-role.yaml"),dda.c4k_common.yaml.load_as_edn("monitoring/prometheus/cluster-role-binding.yaml"),dda.c4k_common.yaml.load_as_edn("monitoring/prometheus/service.yaml"),dda.c4k_common.yaml.load_as_edn("monitoring/prometheus/service-account.yaml"),dda.c4k_common.monitoring.generate_config(config,auth),dda.c4k_common.yaml.load_as_edn("monitoring/prometheus/deployment.yaml"),dda.c4k_common.yaml.load_as_edn("monitoring/node-exporter/service-account.yaml"),dda.c4k_common.yaml.load_as_edn("monitoring/node-exporter/cluster-role.yaml"),dda.c4k_common.yaml.load_as_edn("monitoring/node-exporter/cluster-role-binding.yaml"),dda.c4k_common.yaml.load_as_edn("monitoring/node-exporter/daemon-set.yaml"),dda.c4k_common.yaml.load_as_edn("monitoring/node-exporter/service.yaml"),dda.c4k_common.yaml.load_as_edn("monitoring/kube-state-metrics/cluster-role-binding.yaml"),dda.c4k_common.yaml.load_as_edn("monitoring/kube-state-metrics/cluster-role.yaml"),dda.c4k_common.yaml.load_as_edn("monitoring/kube-state-metrics/deployment.yaml"),dda.c4k_common.yaml.load_as_edn("monitoring/kube-state-metrics/service-account.yaml"),dda.c4k_common.yaml.load_as_edn("monitoring/kube-state-metrics/service.yaml")], null);
});

cljs.spec.alpha.def_impl(new cljs.core.Symbol("dda.c4k-common.monitoring","generate","dda.c4k-common.monitoring/generate",-2022231162,null),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","fspec","cljs.spec.alpha/fspec",-1289128341,null),new cljs.core.Keyword(null,"args","args",1315556576),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"config","config",994861415),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","spec","cljs.spec.alpha/spec",-707298191,null),new cljs.core.Keyword("dda.c4k-common.monitoring","mon-cfg","dda.c4k-common.monitoring/mon-cfg",1085142824)),new cljs.core.Keyword(null,"auth","auth",1389754926),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","spec","cljs.spec.alpha/spec",-707298191,null),new cljs.core.Keyword("dda.c4k-common.monitoring","mon-auth","dda.c4k-common.monitoring/mon-auth",-1640156141))),new cljs.core.Keyword(null,"fn","fn",-1175266204),null,new cljs.core.Keyword(null,"ret","ret",-468222814),new cljs.core.Symbol("dda.c4k-common.predicate","map-or-seq?","dda.c4k-common.predicate/map-or-seq?",-1443028642,null)),cljs.spec.alpha.fspec_impl(cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"config","config",994861415),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","spec","cljs.spec.alpha/spec",-707298191,null),new cljs.core.Keyword("dda.c4k-common.monitoring","mon-cfg","dda.c4k-common.monitoring/mon-cfg",1085142824)),new cljs.core.Keyword(null,"auth","auth",1389754926),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","spec","cljs.spec.alpha/spec",-707298191,null),new cljs.core.Keyword("dda.c4k-common.monitoring","mon-auth","dda.c4k-common.monitoring/mon-auth",-1640156141))),cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"config","config",994861415),new cljs.core.Keyword(null,"auth","auth",1389754926)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(new cljs.core.Keyword("dda.c4k-common.monitoring","mon-cfg","dda.c4k-common.monitoring/mon-cfg",1085142824),new cljs.core.Keyword("dda.c4k-common.monitoring","mon-cfg","dda.c4k-common.monitoring/mon-cfg",1085142824),null,null),cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(new cljs.core.Keyword("dda.c4k-common.monitoring","mon-auth","dda.c4k-common.monitoring/mon-auth",-1640156141),new cljs.core.Keyword("dda.c4k-common.monitoring","mon-auth","dda.c4k-common.monitoring/mon-auth",-1640156141),null,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","spec","cljs.spec.alpha/spec",-707298191,null),new cljs.core.Keyword("dda.c4k-common.monitoring","mon-cfg","dda.c4k-common.monitoring/mon-cfg",1085142824)),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","spec","cljs.spec.alpha/spec",-707298191,null),new cljs.core.Keyword("dda.c4k-common.monitoring","mon-auth","dda.c4k-common.monitoring/mon-auth",-1640156141))], null)),null,null),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"config","config",994861415),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","spec","cljs.spec.alpha/spec",-707298191,null),new cljs.core.Keyword("dda.c4k-common.monitoring","mon-cfg","dda.c4k-common.monitoring/mon-cfg",1085142824)),new cljs.core.Keyword(null,"auth","auth",1389754926),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","spec","cljs.spec.alpha/spec",-707298191,null),new cljs.core.Keyword("dda.c4k-common.monitoring","mon-auth","dda.c4k-common.monitoring/mon-auth",-1640156141))),cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(new cljs.core.Symbol("dda.c4k-common.predicate","map-or-seq?","dda.c4k-common.predicate/map-or-seq?",-1443028642,null),dda.c4k_common.predicate.map_or_seq_QMARK_,null,null),new cljs.core.Symbol("dda.c4k-common.predicate","map-or-seq?","dda.c4k-common.predicate/map-or-seq?",-1443028642,null),null,null,null));

//# sourceMappingURL=dda.c4k_common.monitoring.js.map
