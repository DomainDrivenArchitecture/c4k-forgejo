{"version":3,"sources":["dda/c4k_common/monitoring.cljc"],"mappings":";AAWA,AAAAA,yBAAA,AAAA,kIAAA,AAAA,iIAA4BC;AAC5B,AAAAD,yBAAA,AAAA,yIAAA,AAAA,iIAAgCC;AAChC,AAAAD,yBAAA,AAAA,gIAAA,AAAA,iFAA2BE;AAC3B,AAAAF,yBAAA,AAAA,qHAAA,AAAA,iFAAsBE;AACtB,AAAAF,yBAAA,AAAA,wHAAA,AAAA,4GAAuBG;AACvB,AAAAH,yBAAA,AAAA,0IAAA,AAAA,8IAAgCI;AAChC,AAAAJ,yBAAA,AAAA,kHAAA,AAAA,iFAAoBE;AACpB,AAAAF,yBAAA,AAAA,wHAAA,AAAA,iFAAuBE;AACvB,AAAAF,yBAAA,AAAA,8HAAA,AAAA,iFAA0BE;AAC1B,AAAAF,yBAAA,AAAA,4GAAA,AAAA,umBAAiB,AAAAK,8BAAA,wCAAA,yDAAA,wDAAA,kDAAA,iEAAA,8DAAA,6DAAA,8DAAA,mDAAA,4DAAA,+DAAA,gEAAA,qDAAA,AAAA,wcAAA,AAAA,KAAA,KAAA,mFAAA,WAAAC;AAAA,AAAA,OAAAC,qBAAAD;GAAA,WAAAA;AAAA,AAAA,OAAAE,0BAAAF,QAAA;GAAA,WAAAA;AAAA,AAAA,OAAAE,0BAAAF,QAAA;GAAA,WAAAA;AAAA,AAAA,OAAAE,0BAAAF,QAAA;WAAA,WAAAA;AAAA,AAAA,SAAA,AAAAC,qBAAAD,cAAA,EAAA,AAAAE,0BAAAF,QAAA,qFAAA,EAAA,AAAAE,0BAAAF,QAAA,4EAAA,AAAAE,0BAAAF,QAAA;GAAA,AAAA,iCAAA,AAAA,wcAAA,AAAA,KAAA,AAAA,sTAAA,AAAA,iCAAA,AAAA,6xDAAA,AAAA;AAGjB,AAAAN,yBAAA,AAAA,+GAAA,AAAA,qgBAAkB,AAAAK,8BAAA,wCAAA,yDAAA,wDAAA,kDAAA,iEAAA,8DAAA,6DAAA,8DAAA,mDAAA,4DAAA,+DAAA,gEAAA,qDAAA,AAAA,sWAAA,AAAA,KAAA,KAAA,mFAAA,WAAAI;AAAA,AAAA,OAAAF,qBAAAE;GAAA,WAAAA;AAAA,AAAA,OAAAD,0BAAAC,QAAA;GAAA,WAAAA;AAAA,AAAA,OAAAD,0BAAAC,QAAA;WAAA,WAAAA;AAAA,AAAA,SAAA,AAAAF,qBAAAE,cAAA,EAAA,AAAAD,0BAAAC,QAAA,uFAAA,AAAAD,0BAAAC,QAAA;GAAA,AAAA,iCAAA,AAAA,sWAAA,AAAA,KAAA,AAAA,sQAAA,AAAA,iCAAA,AAAA,i3CAAA,AAAA;AAElB,AAAAT,yBAAA,AAAA,6GAAA,AAAA,mYAAiB,AAAAK,8BAAA,wCAAA,yDAAA,wDAAA,kDAAA,iEAAA,8DAAA,6DAAA,8DAAA,mDAAA,4DAAA,+DAAA,gEAAA,qDAAA,AAAA,KAAA,AAAA,qOAAA,KAAA,mFAAA,WAAAK;AAAA,AAAA,OAAAH,qBAAAG;WAAA,WAAAA;AAAA,AAAA,OAAAH,qBAAAG;GAAA,AAAA,oLAAA,AAAA,iCAAA,AAAA,KAAA,AAAA,iCAAA,AAAA,qOAAA,AAAA,8cAAA,AAAA;AACjB,AAAAV,yBAAA,AAAA,sHAAA,AAAA,kmBAAsB,AAAAK,8BAAA,wCAAA,yDAAA,wDAAA,kDAAA,iEAAA,8DAAA,6DAAA,8DAAA,mDAAA,4DAAA,+DAAA,gEAAA,qDAAA,AAAA,mcAAA,AAAA,KAAA,KAAA,mFAAA,WAAAM;AAAA,AAAA,OAAAJ,qBAAAI;GAAA,WAAAA;AAAA,AAAA,OAAAH,0BAAAG,QAAA;GAAA,WAAAA;AAAA,AAAA,OAAAH,0BAAAG,QAAA;GAAA,WAAAA;AAAA,AAAA,OAAAH,0BAAAG,QAAA;WAAA,WAAAA;AAAA,AAAA,SAAA,AAAAJ,qBAAAI,cAAA,EAAA,AAAAH,0BAAAG,QAAA,sEAAA,EAAA,AAAAH,0BAAAG,QAAA,8EAAA,AAAAH,0BAAAG,QAAA;GAAA,AAAA,iCAAA,AAAA,mcAAA,AAAA,KAAA,AAAA,iTAAA,AAAA,iCAAA,AAAA,wxDAAA,AAAA;AAItB,yCAAA,2CAAA,0RAAA,qTAAA,nqBAAKC,oJACc,CAAA,sEAAA,oEAAA,uJAGe,CAAA,+BAAA,uCAAA,2BAAA,mCAAA,4BAAA,oCAAA,sHAOG,CAAA,4CAAA,iFAAA;AAIrC,AAAKC,gDACH,kDAAA,lDAACC,sDAAa,AAACC,eAAKH;AAGnB,AAAAI,8EAAA,iEAAA,WAA2CC;AAA3C,AACE,IAAAC,UAAMD;AAAN,AAAA,QAAAC;KAAA;AAC8B;;;KAD9B;AAG4D;;;KAH5D;AAIoD;;;KAJpD;AAKkD;;;KALlD;AAMuD;;;KANvD;AAO+C;;;KAP/C;AAQuD;;;KARvD;AAS+C;;;KAT/C;AAU6C;;;KAV7C;AAWkD;;;KAXlD;AAY0C;;;KAZ1C;AAaoD;;;KAbpD;AAc4C;;;KAd5C;AAesC;;;KAftC;AAgB0C;;;KAhB1C;AAiB0C;;;KAjB1C;AAkB+C;;;KAlB/C;AAmBuC;;;;AACrC,MAAO,KAAAC,MAAA;;;;AAEd,AAAA;;;kDAAA,lDAAWI,4GACRE;AADH,AAEE,IAAAC,YAC6CD;IAD7CC,gBAAA,AAAAC,4BAAAD;6BAAA,AAAAE,4CAAAF,cAAA,yFAAA,5KAAcG;AAAd,0BAGG,gCAAA,hCAACC,1BACD,0FAAA,mFAAA,oDAAA,oFAAA,IAAA,oDAAA,tWAACC,2bAAiE,AAACC,eAAKH;;;AAN7E,AAAA7B,yBAAA,AAAA,6IAAA,AAAA,+uBAAA,AAAAoB,2BAAA,AAAAC,wDAAA,AAAA,gXAAA,AAAAC,yBAAA,mFAAA,gEAAA,mFAAA,AAAAD,wDAAA,AAAA,6GAAA,6GAAA,KAAA,cAAA,AAAA,+SAAA,KAAA,MAAA,AAAA,gXAAA,AAAAA,wDAAA,AAAA,kKAAA,KAAA,MAAA,AAAA,uHAAA,KAAA,AAAA,KAAA,vLAAiCG;AAQjC,AAAA;;;uDAAA,vDAAWS,sHACRR,OACAS;AAFH,AAGE,IAAAC,YAA6DV;IAA7DU,gBAAA,AAAAR,4BAAAQ;wBAAA,AAAAP,4CAAAO,cAAA,9EAAcE;mBAAd,AAAAT,4CAAAO,cAAA,zEAAgCG;oBAAhC,AAAAV,4CAAAO,cAAA,1EAA6CI;IAA7CH,YAC0DF;IAD1DE,gBAAA,AAAAT,4BAAAS;yBAAA,AAAAR,4CAAAQ,cAAA,/EACcI;6BADd,AAAAZ,4CAAAQ,cAAA,nFACiCK;AADjC,qKAGG,gCAAA,hCAACX,nBACD,4FAAA,mFAAA,uDAAA,2EAAA,jTAACC,mXACSO,tYACV,oZAAA,mFAAA,uDAAA,2EAAA,zmBAACP,wqBACSQ,3rBACV,0sBAAA,mFAAA,sEAAA,IAAA,v2BAACR,i6BACSM,p7BACV,u8BAAA,mFAAA,sEAAA,IAAA,gEAAA,pqCAACN,yuCACSS,5vCACV,gxCAAA,mFAAA,sEAAA,IAAA,gEAAA,7+CAACT,ijDACSU,vnDACV,+oDAAA,xoDAACC,upDAA2D7B;;;AAjBjE,AAAAb,yBAAA,AAAA,sJAAA,AAAA,w/BAAA,AAAAoB,2BAAA,AAAAC,wDAAA,AAAA,ynBAAA,AAAAC,yBAAA,mFAAA,wDAAA,6DAAA,mFAAA,AAAAD,wDAAA,AAAA,4GAAA,4GAAA,KAAA,MAAA,AAAAA,wDAAA,AAAA,+GAAA,+GAAA,KAAA,cAAA,AAAA,mgBAAA,KAAA,MAAA,AAAA,ynBAAA,AAAAA,wDAAA,AAAA,kKAAA,KAAA,MAAA,AAAA,uHAAA,KAAA,AAAA,KAAA,vLAAsCG;AAmBtC,AAAA;;;4CAAA,5CAAWmB,gGACRlB,OACAS;AAFH,0BAIG,gCAAA,hCAACJ,1BACD,+FAAA,mFAAA,kEAAA,7OAACC,+TACS,AAACa,8BACA,AAACX,qDAA2BR,OAAOS;;;AAPjD,AAAAlC,yBAAA,AAAA,iIAAA,AAAA,w/BAAA,AAAAoB,2BAAA,AAAAC,wDAAA,AAAA,ynBAAA,AAAAC,yBAAA,mFAAA,wDAAA,6DAAA,mFAAA,AAAAD,wDAAA,AAAA,4GAAA,4GAAA,KAAA,MAAA,AAAAA,wDAAA,AAAA,+GAAA,+GAAA,KAAA,cAAA,AAAA,mgBAAA,KAAA,MAAA,AAAA,ynBAAA,AAAAA,wDAAA,AAAA,kKAAA,KAAA,MAAA,AAAA,uHAAA,KAAA,AAAA,KAAA,vLAA2BG;AAS3B,AAAA;;;qCAAA,rCAAWqB,kFACRpB,OACAS;AAFH,AAAA,2FAGG,gCAAA,hCAACJ,6DACD,gCAAA,hCAACA,2EACD,gCAAA,hCAACA,mFACD,gCAAA,hCAACA,sEACD,gCAAA,hCAACA,8EACD,AAACa,0CAAgBlB,OAAOS,MACxB,gCAAA,hCAACJ,yEACD,gCAAA,hCAACA,iFACD,gCAAA,hCAACA,8EACD,gCAAA,hCAACA,sFACD,gCAAA,hCAACA,4EACD,gCAAA,hCAACA,yEACD,gCAAA,hCAACA,2FACD,gCAAA,hCAACA,mFACD,gCAAA,hCAACA,iFACD,gCAAA,hCAACA,sFACD,gCAAA,hCAACA;;;AAnBJ,AAAA9B,yBAAA,AAAA,mHAAA,AAAA,w/BAAA,AAAAoB,2BAAA,AAAAC,wDAAA,AAAA,ynBAAA,AAAAC,yBAAA,mFAAA,wDAAA,6DAAA,mFAAA,AAAAD,wDAAA,AAAA,4GAAA,4GAAA,KAAA,MAAA,AAAAA,wDAAA,AAAA,+GAAA,+GAAA,KAAA,cAAA,AAAA,mgBAAA,KAAA,MAAA,AAAA,ynBAAA,AAAAA,wDAAA,AAAA,kKAAA,KAAA,MAAA,AAAA,uHAAA,KAAA,AAAA,KAAA,vLAAoBG","names":["cljs.spec.alpha/def-impl","dda.c4k-common.predicate/bash-env-string?","cljs.core/string?","dda.c4k-common.predicate/stage?","dda.c4k-common.predicate/pvc-storage-class-name?","cljs.spec.alpha/map-spec-impl","G__6166","cljs.core/map?","cljs.core/contains?","G__6178","G__6181","G__6182","dda.c4k-common.monitoring/metric-regex","dda.c4k-common.monitoring/filter-regex-string","clojure.string.join","cljs.core/vals","dda.c4k-common.yaml/load-resource","resource-name","G__6187","js/Error","cljs.spec.alpha/fspec-impl","cljs.spec.alpha.spec_impl","cljs.spec.alpha/cat-impl","dda.c4k-common.monitoring/generate-stateful-set","dda.c4k-common.predicate/map-or-seq?","config","map__6190","cljs.core/--destructure-map","cljs.core.get","pvc-storage-class-name","dda.c4k-common.yaml/load-as-edn","cljs.core/assoc-in","cljs.core/name","dda.c4k-common.monitoring/generate-prometheus-config","auth","map__6192","map__6193","grafana-cloud-url","cluster-name","cluster-stage","grafana-cloud-user","grafana-cloud-password","dda.c4k-common.common/replace-all-matching-values-by-new-value","dda.c4k-common.monitoring/generate-config","dda.c4k-common.yaml/to-string","dda.c4k-common.monitoring/generate"],"sourcesContent":["(ns dda.c4k-common.monitoring\n  (:require\n   [clojure.spec.alpha :as s]\n   #?(:cljs [shadow.resource :as rc])\n   #?(:clj [orchestra.core :refer [defn-spec]]\n      :cljs [orchestra.core :refer-macros [defn-spec]])\n   [dda.c4k-common.yaml :as yaml]\n   [dda.c4k-common.predicate :as cp]\n   [dda.c4k-common.common :as cm]\n   [clojure.string :as str]))\n\n(s/def ::grafana-cloud-user cp/bash-env-string?)\n(s/def ::grafana-cloud-password cp/bash-env-string?)\n(s/def ::grafana-cloud-url string?)\n(s/def ::cluster-name string?)\n(s/def ::cluster-stage cp/stage?)\n(s/def ::pvc-storage-class-name cp/pvc-storage-class-name?)\n(s/def ::node-regex string?)\n(s/def ::traefik-regex string?)\n(s/def ::kube-state-regex string?)\n(s/def ::mon-cfg (s/keys :req-un [::grafana-cloud-url\n                                 ::cluster-name\n                                 ::cluster-stage]))\n(s/def ::mon-auth (s/keys :req-un [::grafana-cloud-user \n                               ::grafana-cloud-password]))\n(s/def ::storage (s/keys :opt-un [::pvc-storage-class-name]))\n(s/def ::filter-regex (s/keys :req-un [::node-regex \n                                       ::traefik-regex \n                                       ::kube-state-regex]))\n\n(def metric-regex {:node-regex\n                   (str \"node_cpu_sec.+|node_load[0-9]+|node_memory_Buf.*|node_memory_Mem.*|\"\n                        \"node_memory_Cached.*|node_disk_[r,w,i].*|node_filesystem_[s,a].*|\"\n                        \"node_network_receive_bytes_total|node_network_transmit_bytes_total\")\n                   :traefik-regex (str \"traefik_entrypoint_.*_total|\"\n                                       \"traefik_entrypoint_.*_seconds_count|\"\n                                       \"traefik_router_.*_total|\"\n                                       \"traefik_router_.*_seconds_count|\"\n                                       \"traefik_service_.*_total|\"\n                                       \"traefik_service_.*_seconds_count|\"\n                                       \"traefik_tls_certs_not_after\")\n                   :kube-state-regex (str \"kube_pod_container_status_restarts_total|\"\n                                          \"kube_pod_status_reason|kube_node_status_capacity|kube_node_status_allocatable|\"\n                                          \"kube_cronjob_status_active|kube_job_status_failed\")})\n\n(def filter-regex-string\n  (str/join \"|\" (vals metric-regex)))\n\n#?(:cljs\n   (defmethod yaml/load-resource :monitoring [resource-name]\n     (case resource-name\n       \"monitoring/namespace.yaml\" (rc/inline \"monitoring/namespace.yaml\")\n\n       \"monitoring/kube-state-metrics/cluster-role-binding.yaml\" (rc/inline \"monitoring/kube-state-metrics/cluster-role-binding.yaml\")\n       \"monitoring/kube-state-metrics/cluster-role.yaml\" (rc/inline \"monitoring/kube-state-metrics/cluster-role.yaml\")\n       \"monitoring/kube-state-metrics/deployment.yaml\" (rc/inline \"monitoring/kube-state-metrics/deployment.yaml\")\n       \"monitoring/kube-state-metrics/service-account.yaml\" (rc/inline \"monitoring/kube-state-metrics/service-account.yaml\")\n       \"monitoring/kube-state-metrics/service.yaml\" (rc/inline \"monitoring/kube-state-metrics/service.yaml\")\n       \"monitoring/node-exporter/cluster-role-binding.yaml\" (rc/inline \"monitoring/node-exporter/cluster-role-binding.yaml\")\n       \"monitoring/node-exporter/cluster-role.yaml\" (rc/inline \"monitoring/node-exporter/cluster-role.yaml\")\n       \"monitoring/node-exporter/daemon-set.yaml\" (rc/inline \"monitoring/node-exporter/daemon-set.yaml\")\n       \"monitoring/node-exporter/service-account.yaml\" (rc/inline \"monitoring/node-exporter/service-account.yaml\")\n       \"monitoring/node-exporter/service.yaml\" (rc/inline \"monitoring/node-exporter/service.yaml\")\n       \"monitoring/prometheus/cluster-role-binding.yaml\" (rc/inline \"monitoring/prometheus/cluster-role-binding.yaml\")\n       \"monitoring/prometheus/cluster-role.yaml\" (rc/inline \"monitoring/prometheus/cluster-role.yaml\")\n       \"monitoring/prometheus/config.yaml\" (rc/inline \"monitoring/prometheus/config.yaml\")\n       \"monitoring/prometheus/deployment.yaml\" (rc/inline \"monitoring/prometheus/deployment.yaml\")\n       \"monitoring/prometheus/prometheus.yaml\" (rc/inline \"monitoring/prometheus/prometheus.yaml\")\n       \"monitoring/prometheus/service-account.yaml\" (rc/inline \"monitoring/prometheus/service-account.yaml\")\n       \"monitoring/prometheus/service.yaml\" (rc/inline \"monitoring/prometheus/service.yaml\")\n       (throw (js/Error. \"Undefined Resource!\")))))\n\n(defn-spec generate-stateful-set cp/map-or-seq?\n  [config ::storage]\n  (let [{:keys [pvc-storage-class-name]\n         :or {pvc-storage-class-name :manual}} config]\n    (->\n     (yaml/load-as-edn \"monitoring/stateful-set.yaml\")\n     (assoc-in [:spec :volumeClaimTemplates 0 :spec :storageClassName] (name pvc-storage-class-name)))))\n\n(defn-spec generate-prometheus-config cp/map-or-seq?\n  [config ::mon-cfg\n   auth ::mon-auth]\n  (let [{:keys [grafana-cloud-url cluster-name cluster-stage]} config\n        {:keys [grafana-cloud-user grafana-cloud-password]} auth]\n    (->\n     (yaml/load-as-edn \"monitoring/prometheus/prometheus.yaml\")\n     (assoc-in [:global :external_labels :cluster]\n               cluster-name)\n     (assoc-in [:global :external_labels :stage]\n               cluster-stage)\n     (assoc-in [:remote_write 0 :url]\n               grafana-cloud-url)\n     (assoc-in [:remote_write 0 :basic_auth :username]\n               grafana-cloud-user)\n     (assoc-in [:remote_write 0 :basic_auth :password]\n               grafana-cloud-password)\n     (cm/replace-all-matching-values-by-new-value \"FILTER_REGEX\" filter-regex-string))))\n\n(defn-spec generate-config cp/map-or-seq?\n  [config ::mon-cfg\n   auth ::mon-auth]\n  (->\n   (yaml/load-as-edn \"monitoring/prometheus/config.yaml\")\n   (assoc-in [:stringData :prometheus.yaml]\n             (yaml/to-string\n              (generate-prometheus-config config auth)))))\n\n(defn-spec generate cp/map-or-seq?\n  [config ::mon-cfg\n   auth ::mon-auth]\n  [(yaml/load-as-edn \"monitoring/namespace.yaml\")\n   (yaml/load-as-edn \"monitoring/prometheus/cluster-role.yaml\")\n   (yaml/load-as-edn \"monitoring/prometheus/cluster-role-binding.yaml\")\n   (yaml/load-as-edn \"monitoring/prometheus/service.yaml\")\n   (yaml/load-as-edn \"monitoring/prometheus/service-account.yaml\")\n   (generate-config config auth)\n   (yaml/load-as-edn \"monitoring/prometheus/deployment.yaml\")\n   (yaml/load-as-edn \"monitoring/node-exporter/service-account.yaml\")\n   (yaml/load-as-edn \"monitoring/node-exporter/cluster-role.yaml\")\n   (yaml/load-as-edn \"monitoring/node-exporter/cluster-role-binding.yaml\")\n   (yaml/load-as-edn \"monitoring/node-exporter/daemon-set.yaml\")\n   (yaml/load-as-edn \"monitoring/node-exporter/service.yaml\")\n   (yaml/load-as-edn \"monitoring/kube-state-metrics/cluster-role-binding.yaml\")\n   (yaml/load-as-edn \"monitoring/kube-state-metrics/cluster-role.yaml\")\n   (yaml/load-as-edn \"monitoring/kube-state-metrics/deployment.yaml\")\n   (yaml/load-as-edn \"monitoring/kube-state-metrics/service-account.yaml\")\n   (yaml/load-as-edn \"monitoring/kube-state-metrics/service.yaml\")])\n"]}