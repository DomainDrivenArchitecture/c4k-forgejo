goog.provide('dda.c4k_forgejo.forgejo');
dda.c4k_forgejo.forgejo.domain_list_QMARK_ = (function dda$c4k_forgejo$forgejo$domain_list_QMARK_(input){
return ((clojure.string.blank_QMARK_(input)) || (dda.c4k_common.predicate.string_of_separated_by_QMARK_(dda.c4k_common.predicate.fqdn_string_QMARK_,/,/,input)));
});
dda.c4k_forgejo.forgejo.boolean_from_string = (function dda$c4k_forgejo$forgejo$boolean_from_string(input){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(input,"true")){
return true;
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(input,"false")){
return false;
} else {
return null;

}
}
});
dda.c4k_forgejo.forgejo.boolean_string_QMARK_ = (function dda$c4k_forgejo$forgejo$boolean_string_QMARK_(input){
return ((typeof input === 'string') && (cljs.core.boolean_QMARK_(dda.c4k_forgejo.forgejo.boolean_from_string(input))));
});
cljs.spec.alpha.def_impl(new cljs.core.Keyword("dda.c4k-forgejo.forgejo","default-app-name","dda.c4k-forgejo.forgejo/default-app-name",-1742542185),new cljs.core.Symbol("cljs.core","string?","cljs.core/string?",-2072921719,null),cljs.core.string_QMARK_);
cljs.spec.alpha.def_impl(new cljs.core.Keyword("dda.c4k-forgejo.forgejo","fqdn","dda.c4k-forgejo.forgejo/fqdn",-686210095),new cljs.core.Symbol("dda.c4k-common.predicate","fqdn-string?","dda.c4k-common.predicate/fqdn-string?",-423717834,null),dda.c4k_common.predicate.fqdn_string_QMARK_);
cljs.spec.alpha.def_impl(new cljs.core.Keyword("dda.c4k-forgejo.forgejo","deploy-federated","dda.c4k-forgejo.forgejo/deploy-federated",-14143504),new cljs.core.Symbol("dda.c4k-forgejo.forgejo","boolean-string?","dda.c4k-forgejo.forgejo/boolean-string?",-942174265,null),dda.c4k_forgejo.forgejo.boolean_string_QMARK_);
cljs.spec.alpha.def_impl(new cljs.core.Keyword("dda.c4k-forgejo.forgejo","mailer-from","dda.c4k-forgejo.forgejo/mailer-from",-1720436227),new cljs.core.Symbol("dda.c4k-common.predicate","bash-env-string?","dda.c4k-common.predicate/bash-env-string?",-1836972098,null),dda.c4k_common.predicate.bash_env_string_QMARK_);
cljs.spec.alpha.def_impl(new cljs.core.Keyword("dda.c4k-forgejo.forgejo","mailer-host","dda.c4k-forgejo.forgejo/mailer-host",239649441),new cljs.core.Symbol("dda.c4k-common.predicate","bash-env-string?","dda.c4k-common.predicate/bash-env-string?",-1836972098,null),dda.c4k_common.predicate.bash_env_string_QMARK_);
cljs.spec.alpha.def_impl(new cljs.core.Keyword("dda.c4k-forgejo.forgejo","mailer-port","dda.c4k-forgejo.forgejo/mailer-port",-1400754980),new cljs.core.Symbol("dda.c4k-common.predicate","bash-env-string?","dda.c4k-common.predicate/bash-env-string?",-1836972098,null),dda.c4k_common.predicate.bash_env_string_QMARK_);
cljs.spec.alpha.def_impl(new cljs.core.Keyword("dda.c4k-forgejo.forgejo","service-domain-whitelist","dda.c4k-forgejo.forgejo/service-domain-whitelist",1677619847),new cljs.core.Symbol("dda.c4k-forgejo.forgejo","domain-list?","dda.c4k-forgejo.forgejo/domain-list?",1595996374,null),dda.c4k_forgejo.forgejo.domain_list_QMARK_);
cljs.spec.alpha.def_impl(new cljs.core.Keyword("dda.c4k-forgejo.forgejo","service-noreply-address","dda.c4k-forgejo.forgejo/service-noreply-address",1964518762),new cljs.core.Symbol("cljs.core","string?","cljs.core/string?",-2072921719,null),cljs.core.string_QMARK_);
cljs.spec.alpha.def_impl(new cljs.core.Keyword("dda.c4k-forgejo.forgejo","mailer-user","dda.c4k-forgejo.forgejo/mailer-user",-546726950),new cljs.core.Symbol("dda.c4k-common.predicate","bash-env-string?","dda.c4k-common.predicate/bash-env-string?",-1836972098,null),dda.c4k_common.predicate.bash_env_string_QMARK_);
cljs.spec.alpha.def_impl(new cljs.core.Keyword("dda.c4k-forgejo.forgejo","mailer-pw","dda.c4k-forgejo.forgejo/mailer-pw",-1005826611),new cljs.core.Symbol("dda.c4k-common.predicate","bash-env-string?","dda.c4k-common.predicate/bash-env-string?",-1836972098,null),dda.c4k_common.predicate.bash_env_string_QMARK_);
cljs.spec.alpha.def_impl(new cljs.core.Keyword("dda.c4k-forgejo.forgejo","issuer","dda.c4k-forgejo.forgejo/issuer",941217312),new cljs.core.Symbol("dda.c4k-common.predicate","letsencrypt-issuer?","dda.c4k-common.predicate/letsencrypt-issuer?",1185597535,null),dda.c4k_common.predicate.letsencrypt_issuer_QMARK_);
cljs.spec.alpha.def_impl(new cljs.core.Keyword("dda.c4k-forgejo.forgejo","volume-total-storage-size","dda.c4k-forgejo.forgejo/volume-total-storage-size",-1034386183),cljs.core.list(new cljs.core.Symbol("cljs.core","partial","cljs.core/partial",1483172485,null),new cljs.core.Symbol("dda.c4k-common.predicate","int-gt-n?","dda.c4k-common.predicate/int-gt-n?",1086947356,null),(5)),cljs.core.partial.cljs$core$IFn$_invoke$arity$2(dda.c4k_common.predicate.int_gt_n_QMARK_,(5)));
dda.c4k_forgejo.forgejo.config_defaults = new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"issuer","issuer",-1199257898),"staging"], null);
dda.c4k_forgejo.forgejo.config_QMARK_ = cljs.spec.alpha.map_spec_impl(cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"req-un","req-un",1074571008),new cljs.core.Keyword(null,"opt-un","opt-un",883442496),new cljs.core.Keyword(null,"gfn","gfn",791517474),new cljs.core.Keyword(null,"pred-exprs","pred-exprs",1792271395),new cljs.core.Keyword(null,"keys-pred","keys-pred",858984739),new cljs.core.Keyword(null,"opt-keys","opt-keys",1262688261),new cljs.core.Keyword(null,"req-specs","req-specs",553962313),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.Keyword(null,"req-keys","req-keys",514319221),new cljs.core.Keyword(null,"opt-specs","opt-specs",-384905450),new cljs.core.Keyword(null,"pred-forms","pred-forms",172611832),new cljs.core.Keyword(null,"opt","opt",-794706369)],[new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("dda.c4k-forgejo.forgejo","fqdn","dda.c4k-forgejo.forgejo/fqdn",-686210095),new cljs.core.Keyword("dda.c4k-forgejo.forgejo","deploy-federated","dda.c4k-forgejo.forgejo/deploy-federated",-14143504),new cljs.core.Keyword("dda.c4k-forgejo.forgejo","mailer-from","dda.c4k-forgejo.forgejo/mailer-from",-1720436227),new cljs.core.Keyword("dda.c4k-forgejo.forgejo","mailer-host","dda.c4k-forgejo.forgejo/mailer-host",239649441),new cljs.core.Keyword("dda.c4k-forgejo.forgejo","mailer-port","dda.c4k-forgejo.forgejo/mailer-port",-1400754980),new cljs.core.Keyword("dda.c4k-forgejo.forgejo","service-noreply-address","dda.c4k-forgejo.forgejo/service-noreply-address",1964518762)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("dda.c4k-forgejo.forgejo","issuer","dda.c4k-forgejo.forgejo/issuer",941217312),new cljs.core.Keyword("dda.c4k-forgejo.forgejo","default-app-name","dda.c4k-forgejo.forgejo/default-app-name",-1742542185),new cljs.core.Keyword("dda.c4k-forgejo.forgejo","service-domain-whitelist","dda.c4k-forgejo.forgejo/service-domain-whitelist",1677619847)], null),null,new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (G__6253){
return cljs.core.map_QMARK_(G__6253);
}),(function (G__6253){
return cljs.core.contains_QMARK_(G__6253,new cljs.core.Keyword(null,"fqdn","fqdn",-494775377));
}),(function (G__6253){
return cljs.core.contains_QMARK_(G__6253,new cljs.core.Keyword(null,"deploy-federated","deploy-federated",-1957879598));
}),(function (G__6253){
return cljs.core.contains_QMARK_(G__6253,new cljs.core.Keyword(null,"mailer-from","mailer-from",46746467));
}),(function (G__6253){
return cljs.core.contains_QMARK_(G__6253,new cljs.core.Keyword(null,"mailer-host","mailer-host",-1829907585));
}),(function (G__6253){
return cljs.core.contains_QMARK_(G__6253,new cljs.core.Keyword(null,"mailer-port","mailer-port",690436546));
}),(function (G__6253){
return cljs.core.contains_QMARK_(G__6253,new cljs.core.Keyword(null,"service-noreply-address","service-noreply-address",-205702396));
})], null),(function (G__6253){
return ((cljs.core.map_QMARK_(G__6253)) && (((cljs.core.contains_QMARK_(G__6253,new cljs.core.Keyword(null,"fqdn","fqdn",-494775377))) && (((cljs.core.contains_QMARK_(G__6253,new cljs.core.Keyword(null,"deploy-federated","deploy-federated",-1957879598))) && (((cljs.core.contains_QMARK_(G__6253,new cljs.core.Keyword(null,"mailer-from","mailer-from",46746467))) && (((cljs.core.contains_QMARK_(G__6253,new cljs.core.Keyword(null,"mailer-host","mailer-host",-1829907585))) && (((cljs.core.contains_QMARK_(G__6253,new cljs.core.Keyword(null,"mailer-port","mailer-port",690436546))) && (cljs.core.contains_QMARK_(G__6253,new cljs.core.Keyword(null,"service-noreply-address","service-noreply-address",-205702396))))))))))))));
}),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"issuer","issuer",-1199257898),new cljs.core.Keyword(null,"default-app-name","default-app-name",460840317),new cljs.core.Keyword(null,"service-domain-whitelist","service-domain-whitelist",-547788367)], null),new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("dda.c4k-forgejo.forgejo","fqdn","dda.c4k-forgejo.forgejo/fqdn",-686210095),new cljs.core.Keyword("dda.c4k-forgejo.forgejo","deploy-federated","dda.c4k-forgejo.forgejo/deploy-federated",-14143504),new cljs.core.Keyword("dda.c4k-forgejo.forgejo","mailer-from","dda.c4k-forgejo.forgejo/mailer-from",-1720436227),new cljs.core.Keyword("dda.c4k-forgejo.forgejo","mailer-host","dda.c4k-forgejo.forgejo/mailer-host",239649441),new cljs.core.Keyword("dda.c4k-forgejo.forgejo","mailer-port","dda.c4k-forgejo.forgejo/mailer-port",-1400754980),new cljs.core.Keyword("dda.c4k-forgejo.forgejo","service-noreply-address","dda.c4k-forgejo.forgejo/service-noreply-address",1964518762)], null),null,new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"fqdn","fqdn",-494775377),new cljs.core.Keyword(null,"deploy-federated","deploy-federated",-1957879598),new cljs.core.Keyword(null,"mailer-from","mailer-from",46746467),new cljs.core.Keyword(null,"mailer-host","mailer-host",-1829907585),new cljs.core.Keyword(null,"mailer-port","mailer-port",690436546),new cljs.core.Keyword(null,"service-noreply-address","service-noreply-address",-205702396)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("dda.c4k-forgejo.forgejo","issuer","dda.c4k-forgejo.forgejo/issuer",941217312),new cljs.core.Keyword("dda.c4k-forgejo.forgejo","default-app-name","dda.c4k-forgejo.forgejo/default-app-name",-1742542185),new cljs.core.Keyword("dda.c4k-forgejo.forgejo","service-domain-whitelist","dda.c4k-forgejo.forgejo/service-domain-whitelist",1677619847)], null),new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol("cljs.core","fn","cljs.core/fn",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"%","%",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol("cljs.core","map?","cljs.core/map?",-1390345523,null),new cljs.core.Symbol(null,"%","%",-950237169,null))),cljs.core.list(new cljs.core.Symbol("cljs.core","fn","cljs.core/fn",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"%","%",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol("cljs.core","contains?","cljs.core/contains?",-976526835,null),new cljs.core.Symbol(null,"%","%",-950237169,null),new cljs.core.Keyword(null,"fqdn","fqdn",-494775377))),cljs.core.list(new cljs.core.Symbol("cljs.core","fn","cljs.core/fn",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"%","%",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol("cljs.core","contains?","cljs.core/contains?",-976526835,null),new cljs.core.Symbol(null,"%","%",-950237169,null),new cljs.core.Keyword(null,"deploy-federated","deploy-federated",-1957879598))),cljs.core.list(new cljs.core.Symbol("cljs.core","fn","cljs.core/fn",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"%","%",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol("cljs.core","contains?","cljs.core/contains?",-976526835,null),new cljs.core.Symbol(null,"%","%",-950237169,null),new cljs.core.Keyword(null,"mailer-from","mailer-from",46746467))),cljs.core.list(new cljs.core.Symbol("cljs.core","fn","cljs.core/fn",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"%","%",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol("cljs.core","contains?","cljs.core/contains?",-976526835,null),new cljs.core.Symbol(null,"%","%",-950237169,null),new cljs.core.Keyword(null,"mailer-host","mailer-host",-1829907585))),cljs.core.list(new cljs.core.Symbol("cljs.core","fn","cljs.core/fn",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"%","%",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol("cljs.core","contains?","cljs.core/contains?",-976526835,null),new cljs.core.Symbol(null,"%","%",-950237169,null),new cljs.core.Keyword(null,"mailer-port","mailer-port",690436546))),cljs.core.list(new cljs.core.Symbol("cljs.core","fn","cljs.core/fn",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"%","%",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol("cljs.core","contains?","cljs.core/contains?",-976526835,null),new cljs.core.Symbol(null,"%","%",-950237169,null),new cljs.core.Keyword(null,"service-noreply-address","service-noreply-address",-205702396)))], null),null]));
dda.c4k_forgejo.forgejo.auth_QMARK_ = cljs.spec.alpha.map_spec_impl(cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"req-un","req-un",1074571008),new cljs.core.Keyword(null,"opt-un","opt-un",883442496),new cljs.core.Keyword(null,"gfn","gfn",791517474),new cljs.core.Keyword(null,"pred-exprs","pred-exprs",1792271395),new cljs.core.Keyword(null,"keys-pred","keys-pred",858984739),new cljs.core.Keyword(null,"opt-keys","opt-keys",1262688261),new cljs.core.Keyword(null,"req-specs","req-specs",553962313),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.Keyword(null,"req-keys","req-keys",514319221),new cljs.core.Keyword(null,"opt-specs","opt-specs",-384905450),new cljs.core.Keyword(null,"pred-forms","pred-forms",172611832),new cljs.core.Keyword(null,"opt","opt",-794706369)],[new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("dda.c4k-common.postgres","postgres-db-user","dda.c4k-common.postgres/postgres-db-user",294546573),new cljs.core.Keyword("dda.c4k-common.postgres","postgres-db-password","dda.c4k-common.postgres/postgres-db-password",262988616),new cljs.core.Keyword("dda.c4k-forgejo.forgejo","mailer-user","dda.c4k-forgejo.forgejo/mailer-user",-546726950),new cljs.core.Keyword("dda.c4k-forgejo.forgejo","mailer-pw","dda.c4k-forgejo.forgejo/mailer-pw",-1005826611)], null),null,null,new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (G__6254){
return cljs.core.map_QMARK_(G__6254);
}),(function (G__6254){
return cljs.core.contains_QMARK_(G__6254,new cljs.core.Keyword(null,"postgres-db-user","postgres-db-user",1981611945));
}),(function (G__6254){
return cljs.core.contains_QMARK_(G__6254,new cljs.core.Keyword(null,"postgres-db-password","postgres-db-password",-1958852060));
}),(function (G__6254){
return cljs.core.contains_QMARK_(G__6254,new cljs.core.Keyword(null,"mailer-user","mailer-user",1809094392));
}),(function (G__6254){
return cljs.core.contains_QMARK_(G__6254,new cljs.core.Keyword(null,"mailer-pw","mailer-pw",1068974003));
})], null),(function (G__6254){
return ((cljs.core.map_QMARK_(G__6254)) && (((cljs.core.contains_QMARK_(G__6254,new cljs.core.Keyword(null,"postgres-db-user","postgres-db-user",1981611945))) && (((cljs.core.contains_QMARK_(G__6254,new cljs.core.Keyword(null,"postgres-db-password","postgres-db-password",-1958852060))) && (((cljs.core.contains_QMARK_(G__6254,new cljs.core.Keyword(null,"mailer-user","mailer-user",1809094392))) && (cljs.core.contains_QMARK_(G__6254,new cljs.core.Keyword(null,"mailer-pw","mailer-pw",1068974003))))))))));
}),cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("dda.c4k-common.postgres","postgres-db-user","dda.c4k-common.postgres/postgres-db-user",294546573),new cljs.core.Keyword("dda.c4k-common.postgres","postgres-db-password","dda.c4k-common.postgres/postgres-db-password",262988616),new cljs.core.Keyword("dda.c4k-forgejo.forgejo","mailer-user","dda.c4k-forgejo.forgejo/mailer-user",-546726950),new cljs.core.Keyword("dda.c4k-forgejo.forgejo","mailer-pw","dda.c4k-forgejo.forgejo/mailer-pw",-1005826611)], null),null,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"postgres-db-user","postgres-db-user",1981611945),new cljs.core.Keyword(null,"postgres-db-password","postgres-db-password",-1958852060),new cljs.core.Keyword(null,"mailer-user","mailer-user",1809094392),new cljs.core.Keyword(null,"mailer-pw","mailer-pw",1068974003)], null),cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol("cljs.core","fn","cljs.core/fn",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"%","%",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol("cljs.core","map?","cljs.core/map?",-1390345523,null),new cljs.core.Symbol(null,"%","%",-950237169,null))),cljs.core.list(new cljs.core.Symbol("cljs.core","fn","cljs.core/fn",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"%","%",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol("cljs.core","contains?","cljs.core/contains?",-976526835,null),new cljs.core.Symbol(null,"%","%",-950237169,null),new cljs.core.Keyword(null,"postgres-db-user","postgres-db-user",1981611945))),cljs.core.list(new cljs.core.Symbol("cljs.core","fn","cljs.core/fn",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"%","%",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol("cljs.core","contains?","cljs.core/contains?",-976526835,null),new cljs.core.Symbol(null,"%","%",-950237169,null),new cljs.core.Keyword(null,"postgres-db-password","postgres-db-password",-1958852060))),cljs.core.list(new cljs.core.Symbol("cljs.core","fn","cljs.core/fn",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"%","%",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol("cljs.core","contains?","cljs.core/contains?",-976526835,null),new cljs.core.Symbol(null,"%","%",-950237169,null),new cljs.core.Keyword(null,"mailer-user","mailer-user",1809094392))),cljs.core.list(new cljs.core.Symbol("cljs.core","fn","cljs.core/fn",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"%","%",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol("cljs.core","contains?","cljs.core/contains?",-976526835,null),new cljs.core.Symbol(null,"%","%",-950237169,null),new cljs.core.Keyword(null,"mailer-pw","mailer-pw",1068974003)))], null),null]));
dda.c4k_forgejo.forgejo.vol_QMARK_ = cljs.spec.alpha.map_spec_impl(cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"req-un","req-un",1074571008),new cljs.core.Keyword(null,"opt-un","opt-un",883442496),new cljs.core.Keyword(null,"gfn","gfn",791517474),new cljs.core.Keyword(null,"pred-exprs","pred-exprs",1792271395),new cljs.core.Keyword(null,"keys-pred","keys-pred",858984739),new cljs.core.Keyword(null,"opt-keys","opt-keys",1262688261),new cljs.core.Keyword(null,"req-specs","req-specs",553962313),new cljs.core.Keyword(null,"req","req",-326448303),new cljs.core.Keyword(null,"req-keys","req-keys",514319221),new cljs.core.Keyword(null,"opt-specs","opt-specs",-384905450),new cljs.core.Keyword(null,"pred-forms","pred-forms",172611832),new cljs.core.Keyword(null,"opt","opt",-794706369)],[new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("dda.c4k-forgejo.forgejo","volume-total-storage-size","dda.c4k-forgejo.forgejo/volume-total-storage-size",-1034386183)], null),null,null,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (G__6255){
return cljs.core.map_QMARK_(G__6255);
}),(function (G__6255){
return cljs.core.contains_QMARK_(G__6255,new cljs.core.Keyword(null,"volume-total-storage-size","volume-total-storage-size",1173468179));
})], null),(function (G__6255){
return ((cljs.core.map_QMARK_(G__6255)) && (cljs.core.contains_QMARK_(G__6255,new cljs.core.Keyword(null,"volume-total-storage-size","volume-total-storage-size",1173468179))));
}),cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("dda.c4k-forgejo.forgejo","volume-total-storage-size","dda.c4k-forgejo.forgejo/volume-total-storage-size",-1034386183)], null),null,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"volume-total-storage-size","volume-total-storage-size",1173468179)], null),cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol("cljs.core","fn","cljs.core/fn",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"%","%",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol("cljs.core","map?","cljs.core/map?",-1390345523,null),new cljs.core.Symbol(null,"%","%",-950237169,null))),cljs.core.list(new cljs.core.Symbol("cljs.core","fn","cljs.core/fn",-1065745098,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"%","%",-950237169,null)], null),cljs.core.list(new cljs.core.Symbol("cljs.core","contains?","cljs.core/contains?",-976526835,null),new cljs.core.Symbol(null,"%","%",-950237169,null),new cljs.core.Keyword(null,"volume-total-storage-size","volume-total-storage-size",1173468179)))], null),null]));
dda.c4k_forgejo.forgejo.data_storage_by_volume_size = (function dda$c4k_forgejo$forgejo$data_storage_by_volume_size(total){
return total;
});
dda.c4k_forgejo.forgejo.federated_image_name = "codeberg.org/meissa/forgejo:federated-latest";
dda.c4k_forgejo.forgejo.non_federated_image_name = "codeberg.org/forgejo/forgejo:1.19";
dda.c4k_common.yaml.load_resource.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,"forgejo","forgejo",1428448493),(function (resource_name){
var G__6256 = resource_name;
switch (G__6256) {
case "forgejo/appini-env-configmap.yaml":
return "apiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: forgejo-env\n  namespace: default\ndata:\n  #[admin]\n  FORGEJO__admin__DEFAULT_EMAIL_NOTIFICATIONS: \"enabled\" # Default configuration for email notifications for users (user configurable). Options: enabled, onmention, disabled\n\n  #[attachments]\n  FORGEJO__attachments__PATH: /data/gitea/attachments\n\n  #[database]\n  FORGEJO__database__DB_TYPE: \"postgres\"\n  FORGEJO__database__HOST: \"postgresql-service:5432\"\n  FORGEJO__database__NAME: forgejo\n  FORGEJO__database__LOG_SQL: \"false\"\n  FORGEJO__database__SSL_MODE: disable\n  FORGEJO__database__CHARSET: utf8\n\n  #[DEFAULT]\n  APP_NAME: APPNAME\n  RUN_MODE: prod\n  RUN_USER: git\n\n  #[federation]\n  FORGEJO__federation__ENABLED: IS_FEDERATED\n  \n  #[indexer]\n  FORGEJO__indexer__ISSUE_INDEXER_PATH: /data/gitea/indexers/issues.bleve\n\n  #[log]\n  FORGEJO__log__MODE: \"console, file\"\n  FORGEJO__log__LEVEL: Info\n  FORGEJO__log__ROOT_PATH: /data/gitea/log\n\n  #[mailer]\n  FORGEJO__mailer__ENABLED: \"true\"\n  FORGEJO__mailer__FROM: FROM\n  FORGEJO__mailer__MAILER_TYPE: smtp+startls\n  FORGEJO__mailer__SMTP_ADDR: MAILERHOST\n  FORGEJO__mailer__SMTP_PORT: MAILERPORT\n\n  #[oauth2]\n  FORGEJO__oauth2__ENABLE: \"true\"\n\n  #[openid]\n  FORGEJO__openid__ENABLE_OPENID: \"true\"\n  FORGEJO__openid__ENABLE_OPENID_SIGNIN: \"true\"\n  FORGEJO__openid__ENABLE_OPENID_SIGNUP: \"true\"\n\n  #[picture]\n  FORGEJO__picture__AVATAR_UPLOAD_PATH: /data/gitea/avatars\n  FORGEJO__picture__REPOSITORY_AVATAR_UPLOAD_PATH: /data/gitea/repo-avatars\n  FORGEJO__picture__DISABLE_GRAVATAR: \"false\"\n  FORGEJO__picture__ENABLE_FEDERATED_AVATAR: \"true\" # Enable support for federated avatars (see http://www.libravatar.org).\n\n  #[repository]\n  FORGEJO__repository__ROOT: /data/git/repositories\n  FORGEJO__repository__DEFAULT_PRIVATE: last\n  FORGEJO__repository__LOCAL_COPY_PATH: /data/gitea/tmp/local-repo\n  FORGEJO__repository__TEMP_PATH: /data/gitea/uploads    \n\n  #[security]\n  FORGEJO__security__INSTALL_LOCK: \"true\"\n\n  #[server]\n  FORGEJO__server__DOMAIN: FQDN\n  FORGEJO__server__SSH_DOMAIN: FQDN\n  FORGEJO__server__ROOT_URL: URL\n  FORGEJO__server__HTTP_PORT: \"3000\"    # HTTP listen port of the server (in the pod)\n  FORGEJO__server__SSH_PORT: \"2222\"     # SSH port displayed in clone URL\n\n  #[service]\n  FORGEJO__service__DISABLE_REGISTRATION: \"false\"  \n  FORGEJO__service__REQUIRE_SIGNIN_VIEW: \"false\"\n  FORGEJO__service__REGISTER_EMAIL_CONFIRM: \"true\"\n  FORGEJO__service__ENABLE_NOTIFY_MAIL: \"true\"\n  FORGEJO__service__EMAIL_DOMAIN_WHITELIST: WHITELISTDOMAINS \n  FORGEJO__service__ALLOW_ONLY_EXTERNAL_REGISTRATION: \"false\"\n  FORGEJO__service__ENABLE_BASIC_AUTHENTICATION: \"true\"\n  FORGEJO__service__ENABLE_CAPTCHA: \"false\"\n  FORGEJO__service__DEFAULT_KEEP_EMAIL_PRIVATE: \"true\"\n  FORGEJO__service__DEFAULT_ALLOW_CREATE_ORGANIZATION: \"true\"\n  FORGEJO__service__DEFAULT_ENABLE_TIMETRACKING: \"true\"\n  FORGEJO__service__NO_REPLY_ADDRESS: NOREPLY  \n\n  #[session]\n  FORGEJO__session__PROVIDER_CONFIG: /data/gitea/sessions\n  FORGEJO__session__PROVIDER: file\n";

break;
case "forgejo/deployment.yaml":
return "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: forgejo\n  namespace: default\n  labels:\n    app: forgejo\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: forgejo\n  template:\n    metadata:\n      name: forgejo\n      labels:\n        app: forgejo\n    spec:\n      containers:\n        - name: forgejo\n          image: IMAGE_NAME\n          imagePullPolicy: IfNotPresent\n          # config settings\n          envFrom:\n            - configMapRef:\n                name: forgejo-env\n            - secretRef:\n                name: forgejo-secrets\n          volumeMounts:\n            - name: forgejo-data-volume\n              mountPath: \"/data\"\n          ports:\n            - containerPort: 22\n              name: git-ssh\n            - containerPort: 3000\n              name: forgejo\n      volumes:\n        - name: forgejo-data-volume\n          persistentVolumeClaim:\n            claimName: forgejo-data-pvc\n          \n";

break;
case "forgejo/secrets.yaml":
return "apiVersion: v1\nkind: Secret\nmetadata:\n  name: forgejo-secrets\ndata:\n    FORGEJO__database__USER: DBUSER\n    FORGEJO__database__PASSWD: DBPW\n    \n    FORGEJO__mailer__USER: MAILERUSER\n    FORGEJO__mailer__PASSWD: MAILERPW\n  ";

break;
case "forgejo/service.yaml":
return "kind: Service\napiVersion: v1\nmetadata:\n  name: forgejo-service\n  namespace: default\nspec:\n  selector:\n    app: forgejo\n  ports:\n    - name: forgejo-http\n      port: 3000\n\n";

break;
case "forgejo/service-ssh.yaml":
return "kind: Service\napiVersion: v1\nmetadata:\n  name: forgejo-ssh-service\n  namespace: default\n  annotations: \n    metallb.universe.tf/allow-shared-ip: \"shared-ip-service-group\"\n    metallb.universe.tf/address-pool: public\nspec:\n  type: LoadBalancer\n  selector:\n    app: forgejo\n  ports:\n    - port: 2222\n      targetPort: 22\n      protocol: TCP\n\n";

break;
case "forgejo/datavolume.yaml":
return "apiVersion: v1\nkind: PersistentVolumeClaim\nmetadata:\n  name: forgejo-data-pvc\n  namespace: default\n  labels:\n    app: forgejo\nspec:\n  storageClassName: local-path\n  accessModes:\n    - ReadWriteOnce\n  resources:\n    requests:      \n      storage: DATASTORAGESIZE\n      ";

break;
default:
throw (new Error("Undefined Resource!"));

}
}));
dda.c4k_forgejo.forgejo.generate_appini_env = (function dda$c4k_forgejo$forgejo$generate_appini_env(config){
var map__6257 = config;
var map__6257__$1 = cljs.core.__destructure_map(map__6257);
var default_app_name = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__6257__$1,new cljs.core.Keyword(null,"default-app-name","default-app-name",460840317),"forgejo instance");
var deploy_federated = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__6257__$1,new cljs.core.Keyword(null,"deploy-federated","deploy-federated",-1957879598));
var fqdn = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__6257__$1,new cljs.core.Keyword(null,"fqdn","fqdn",-494775377));
var mailer_from = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__6257__$1,new cljs.core.Keyword(null,"mailer-from","mailer-from",46746467));
var mailer_host = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__6257__$1,new cljs.core.Keyword(null,"mailer-host","mailer-host",-1829907585));
var mailer_port = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__6257__$1,new cljs.core.Keyword(null,"mailer-port","mailer-port",690436546));
var service_domain_whitelist = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__6257__$1,new cljs.core.Keyword(null,"service-domain-whitelist","service-domain-whitelist",-547788367),fqdn);
var service_noreply_address = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__6257__$1,new cljs.core.Keyword(null,"service-noreply-address","service-noreply-address",-205702396));
var deploy_federated_bool = dda.c4k_forgejo.forgejo.boolean_from_string(deploy_federated);
return dda.c4k_common.common.replace_all_matching_values_by_new_value(dda.c4k_common.common.replace_all_matching_values_by_new_value(dda.c4k_common.common.replace_all_matching_values_by_new_value(dda.c4k_common.common.replace_all_matching_values_by_new_value(dda.c4k_common.common.replace_all_matching_values_by_new_value(dda.c4k_common.common.replace_all_matching_values_by_new_value(dda.c4k_common.common.replace_all_matching_values_by_new_value(dda.c4k_common.common.replace_all_matching_values_by_new_value(dda.c4k_common.common.replace_all_matching_values_by_new_value(dda.c4k_common.yaml.load_as_edn("forgejo/appini-env-configmap.yaml"),"APPNAME",default_app_name),"FQDN",fqdn),"URL",["https://",cljs.core.str.cljs$core$IFn$_invoke$arity$1(fqdn)].join('')),"FROM",mailer_from),"MAILERHOST",mailer_host),"MAILERPORT",mailer_port),"WHITELISTDOMAINS",service_domain_whitelist),"NOREPLY",service_noreply_address),"IS_FEDERATED",(cljs.core.truth_(deploy_federated_bool)?"true":"false"));
});
dda.c4k_forgejo.forgejo.generate_secrets = (function dda$c4k_forgejo$forgejo$generate_secrets(auth){
var map__6258 = auth;
var map__6258__$1 = cljs.core.__destructure_map(map__6258);
var postgres_db_user = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__6258__$1,new cljs.core.Keyword(null,"postgres-db-user","postgres-db-user",1981611945));
var postgres_db_password = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__6258__$1,new cljs.core.Keyword(null,"postgres-db-password","postgres-db-password",-1958852060));
var mailer_user = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__6258__$1,new cljs.core.Keyword(null,"mailer-user","mailer-user",1809094392));
var mailer_pw = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__6258__$1,new cljs.core.Keyword(null,"mailer-pw","mailer-pw",1068974003));
return dda.c4k_common.common.replace_all_matching_values_by_new_value(dda.c4k_common.common.replace_all_matching_values_by_new_value(dda.c4k_common.common.replace_all_matching_values_by_new_value(dda.c4k_common.common.replace_all_matching_values_by_new_value(dda.c4k_common.yaml.load_as_edn("forgejo/secrets.yaml"),"DBUSER",dda.c4k_common.base64.encode(postgres_db_user)),"DBPW",dda.c4k_common.base64.encode(postgres_db_password)),"MAILERUSER",dda.c4k_common.base64.encode(mailer_user)),"MAILERPW",dda.c4k_common.base64.encode(mailer_pw));
});
dda.c4k_forgejo.forgejo.generate_ingress_and_cert = (function dda$c4k_forgejo$forgejo$generate_ingress_and_cert(config){
var map__6259 = config;
var map__6259__$1 = cljs.core.__destructure_map(map__6259);
var fqdn = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__6259__$1,new cljs.core.Keyword(null,"fqdn","fqdn",-494775377));
return dda.c4k_common.ingress.generate_ingress_and_cert(cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"service-name","service-name",955963237),"forgejo-service",new cljs.core.Keyword(null,"service-port","service-port",210675422),(3000),new cljs.core.Keyword(null,"fqdns","fqdns",-520362293),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [fqdn], null)], null),config], 0)));
});
/**
 * 
 */
dda.c4k_forgejo.forgejo.generate_data_volume = (function dda$c4k_forgejo$forgejo$generate_data_volume(config){
var map__6260 = config;
var map__6260__$1 = cljs.core.__destructure_map(map__6260);
var volume_total_storage_size = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__6260__$1,new cljs.core.Keyword(null,"volume-total-storage-size","volume-total-storage-size",1173468179));
var data_storage_size = dda.c4k_forgejo.forgejo.data_storage_by_volume_size(volume_total_storage_size);
return dda.c4k_common.common.replace_all_matching_values_by_new_value(dda.c4k_common.yaml.load_as_edn("forgejo/datavolume.yaml"),"DATASTORAGESIZE",[cljs.core.str.cljs$core$IFn$_invoke$arity$1(data_storage_size),"Gi"].join(''));
});

cljs.spec.alpha.def_impl(new cljs.core.Symbol("dda.c4k-forgejo.forgejo","generate-data-volume","dda.c4k-forgejo.forgejo/generate-data-volume",-1289740966,null),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","fspec","cljs.spec.alpha/fspec",-1289128341,null),new cljs.core.Keyword(null,"args","args",1315556576),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"config","config",994861415),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","spec","cljs.spec.alpha/spec",-707298191,null),new cljs.core.Symbol("dda.c4k-forgejo.forgejo","vol?","dda.c4k-forgejo.forgejo/vol?",-2090502994,null))),new cljs.core.Keyword(null,"fn","fn",-1175266204),null,new cljs.core.Keyword(null,"ret","ret",-468222814),new cljs.core.Symbol("dda.c4k-common.predicate","map-or-seq?","dda.c4k-common.predicate/map-or-seq?",-1443028642,null)),cljs.spec.alpha.fspec_impl(cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"config","config",994861415),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","spec","cljs.spec.alpha/spec",-707298191,null),new cljs.core.Symbol("dda.c4k-forgejo.forgejo","vol?","dda.c4k-forgejo.forgejo/vol?",-2090502994,null))),cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"config","config",994861415)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(new cljs.core.Symbol("dda.c4k-forgejo.forgejo","vol?","dda.c4k-forgejo.forgejo/vol?",-2090502994,null),dda.c4k_forgejo.forgejo.vol_QMARK_,null,null)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","spec","cljs.spec.alpha/spec",-707298191,null),new cljs.core.Symbol("dda.c4k-forgejo.forgejo","vol?","dda.c4k-forgejo.forgejo/vol?",-2090502994,null))], null)),null,null),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"config","config",994861415),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","spec","cljs.spec.alpha/spec",-707298191,null),new cljs.core.Symbol("dda.c4k-forgejo.forgejo","vol?","dda.c4k-forgejo.forgejo/vol?",-2090502994,null))),cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(new cljs.core.Symbol("dda.c4k-common.predicate","map-or-seq?","dda.c4k-common.predicate/map-or-seq?",-1443028642,null),dda.c4k_common.predicate.map_or_seq_QMARK_,null,null),new cljs.core.Symbol("dda.c4k-common.predicate","map-or-seq?","dda.c4k-common.predicate/map-or-seq?",-1443028642,null),null,null,null));
/**
 * 
 */
dda.c4k_forgejo.forgejo.generate_deployment = (function dda$c4k_forgejo$forgejo$generate_deployment(config){
var map__6261 = config;
var map__6261__$1 = cljs.core.__destructure_map(map__6261);
var deploy_federated = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__6261__$1,new cljs.core.Keyword(null,"deploy-federated","deploy-federated",-1957879598));
var deploy_federated_bool = dda.c4k_forgejo.forgejo.boolean_from_string(deploy_federated);
return dda.c4k_common.common.replace_all_matching_values_by_new_value(dda.c4k_common.yaml.load_as_edn("forgejo/deployment.yaml"),"IMAGE_NAME",(cljs.core.truth_(deploy_federated_bool)?dda.c4k_forgejo.forgejo.federated_image_name:dda.c4k_forgejo.forgejo.non_federated_image_name));
});

cljs.spec.alpha.def_impl(new cljs.core.Symbol("dda.c4k-forgejo.forgejo","generate-deployment","dda.c4k-forgejo.forgejo/generate-deployment",1984009544,null),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","fspec","cljs.spec.alpha/fspec",-1289128341,null),new cljs.core.Keyword(null,"args","args",1315556576),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"config","config",994861415),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","spec","cljs.spec.alpha/spec",-707298191,null),new cljs.core.Symbol("dda.c4k-forgejo.forgejo","config?","dda.c4k-forgejo.forgejo/config?",-1943146354,null))),new cljs.core.Keyword(null,"fn","fn",-1175266204),null,new cljs.core.Keyword(null,"ret","ret",-468222814),new cljs.core.Symbol("dda.c4k-common.predicate","map-or-seq?","dda.c4k-common.predicate/map-or-seq?",-1443028642,null)),cljs.spec.alpha.fspec_impl(cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"config","config",994861415),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","spec","cljs.spec.alpha/spec",-707298191,null),new cljs.core.Symbol("dda.c4k-forgejo.forgejo","config?","dda.c4k-forgejo.forgejo/config?",-1943146354,null))),cljs.spec.alpha.cat_impl(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"config","config",994861415)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(new cljs.core.Symbol("dda.c4k-forgejo.forgejo","config?","dda.c4k-forgejo.forgejo/config?",-1943146354,null),dda.c4k_forgejo.forgejo.config_QMARK_,null,null)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","spec","cljs.spec.alpha/spec",-707298191,null),new cljs.core.Symbol("dda.c4k-forgejo.forgejo","config?","dda.c4k-forgejo.forgejo/config?",-1943146354,null))], null)),null,null),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","cat","cljs.spec.alpha/cat",-1471398329,null),new cljs.core.Keyword(null,"config","config",994861415),cljs.core.list(new cljs.core.Symbol("cljs.spec.alpha","spec","cljs.spec.alpha/spec",-707298191,null),new cljs.core.Symbol("dda.c4k-forgejo.forgejo","config?","dda.c4k-forgejo.forgejo/config?",-1943146354,null))),cljs.spec.alpha.spec_impl.cljs$core$IFn$_invoke$arity$4(new cljs.core.Symbol("dda.c4k-common.predicate","map-or-seq?","dda.c4k-common.predicate/map-or-seq?",-1443028642,null),dda.c4k_common.predicate.map_or_seq_QMARK_,null,null),new cljs.core.Symbol("dda.c4k-common.predicate","map-or-seq?","dda.c4k-common.predicate/map-or-seq?",-1443028642,null),null,null,null));
dda.c4k_forgejo.forgejo.generate_service = (function dda$c4k_forgejo$forgejo$generate_service(){
return dda.c4k_common.yaml.load_as_edn("forgejo/service.yaml");
});
dda.c4k_forgejo.forgejo.generate_service_ssh = (function dda$c4k_forgejo$forgejo$generate_service_ssh(){
return dda.c4k_common.yaml.load_as_edn("forgejo/service-ssh.yaml");
});

//# sourceMappingURL=dda.c4k_forgejo.forgejo.js.map
