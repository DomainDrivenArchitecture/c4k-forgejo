{"version":3,"sources":["dda/c4k_forgejo/browser.cljs"],"mappings":";AASA,yCAAA,zCAAMA,0FACHC,KACAC;AAFH,AAAA,0FAAA,2CAAA,qDAAA,2DAAA,oDAAA,mDAAA,wDAAA,2CAAA,wDAAA,2CAAA,yDAAA,mFAAA,2CAAA,qDAAA,2DAAA,oDAAA,+CAAA,wDAAA,2CAAA,uDAAA,wDAAA,sEAAA,2CAAA,qDAAA,2DAAA,oDAAA,8DAAA,1RASwBD,mVAGAC;;AAExB,2CAAA,3CAAMC;AAAN,AACE,+HAAA,xHAACC,2MACC,iGAAA,jGAACC,8CACA,AAACC,4GACD,mvDAAA,nvDAACF,wHACA,uCAAA,vCAACJ,gDAEA,AAACI,wHACA,4CAAA,OAAA,aAAA,hEAACG,gFACD,4CAAA,mBAAA,yCAAA,xGAACA,iHACD,4CAAA,cAAA,6BAAA,vFAACA,uGACD,4CAAA,cAAA,oBAAA,9EAACA,yFACD,4CAAA,cAAA,oBAAA,9EAACA,qFACD,4CAAA,0BAAA,uBAAA,7FAACA,wGACD,4CAAA,SAAA,uCAAA,5FAACA,gGACD,4CAAA,WAAA,4BAAA,nFAACA,uFACD,4CAAA,mBAAA,gEAAA,/HAACA,0IACH,uCAAA,vCAACP,kDAEA,AAACI,wHACA,4CAAA,4BAAA,0CAAA,lHAACG,+HACH,uCAAA,vCAACP,qDAEA,0CAAA,OAAA,iBAAA,8KAAA,hPAACQ,yUAOD,AAACC,6CACF,uCAAA,kBAAA,zDAACC,6FACJ,uCAAA,qBAAA,4BAAA,xFAACC;;AAEJ,+CAAA,/CAAMC;AAAN,AAAA,kDAAA,qDAAA,2DAAA,oDAAA,mDAAA,yDAKG,AAACT;;AAEJ,+CAAA,/CAAMU;AAAN,AACE,IAAMC,SAAO,qFAAA,2DAAA,6DAAA,7MAACC;IACRC,WAAS,qFAAA,6DAAA,6DAAA,/MAACD;IACVE,mBAAiB,qFAAA,qEAAA,6DAAA,vNAACF;AAFxB,AAGE,8GAAA,2CAAA,6GAAA,kJAAA,gIAAA,mIAAA,iIAAA,sKAAA,37BAACG,uMACO,gDAAA,hDAACC,sIACW,gDAAA,hDAACA,qIACN,gDAAA,hDAACA,mIACD,gDAAA,hDAACA,iIACD,gDAAA,hDAACA,0JACW,gDAAA,hDAACA,0KACC,qFAAA,8EAAA,nKAACJ,uOAAsEK,uBACnG,4CAAA,AAAA,2CAAA,yEAAA,9JAAM,GAAK,AAACC,4BAAUP,gHACXA,qBACX,8CAAA,AAAA,2CAAA,6FAAA,pLAAM,GAAK,AAACO,4BAAUL,oIACDA,uBACrB,sDAAA,AAAA,2CAAA,sHAAA,rNAAM,GAAK,AAACK,4BAAUJ,6JACOA;;AAGlC,6CAAA,7CAAMK;AAAN,AACE,sCAAA,OAAA,7CAACC;;AACD,sCAAA,mBAAA,zDAACA;;AACD,sCAAA,cAAA,pDAACA;;AACD,sCAAA,cAAA,pDAACA;;AACD,sCAAA,cAAA,pDAACA;;AACD,sCAAA,0BAAA,hEAACA;;AACD,2EAAA,SAAA,uJAAA,6DAAA,xSAACC;;AACD,2EAAA,WAAA,6KAAA,6DAAA,hUAACA;;AACD,2EAAA,mBAAA,4LAAA,6DAAA,vVAACA;;AACD,2EAAA,4BAAA,+LAAA,tSAACA,0WAA2FJ;;AAC5F,2EAAA,6FAAA,xKAACI,kFAAoBC,0JAA4BC;;AACjD,OAACC;;AAEH,gDAAA,hDAAMC,wGAAuB3B;AAA7B,OACM,AAAC4B,yCAAqB5B,hDACtB,uEAAA,OAAA;AAAA,AAA2B,AAAI,OAACqB;;;AAGtC,+BAAA,/BAAMQ;AAAN,AACE,AAACC,sCAAkB,AAACnB;;AAChBoB,AACA,wBAAA,xBACA,4DAAA,QAAA;AAAA,AACoB,AAAI,AAACV;;+CACG,AAACW,sCACA,AAACpB,+CACD,qFAAA,yDAAA,9IAACE,kNAAiDW,wCAClDQ,wCACAC,taACJ,OAACC;;;AAC9B,8CAAA,9CAACR;;AACD,8CAAA,9CAACA;;AACD,8CAAA,9CAACA;;AACD,8CAAA,9CAACA;;AACD,8CAAA,9CAACA;;AACD,8CAAA,9CAACA;;AACD,8CAAA,9CAACA;;AACD,8CAAA,9CAACA;;AACD,8CAAA,9CAACA;;AACD,8CAAA,9CAACA;;AACD,qDAAA,9CAACA","names":["dda.c4k-forgejo.browser/generate-group","name","content","dda.c4k-forgejo.browser/generate-content","dda.c4k_common.common.concat_vec","cljs.core.assoc","dda.c4k-common.browser/generate-needs-validation","dda.c4k-common.browser/generate-input-field","dda.c4k-common.browser/generate-text-area","dda.c4k-common.browser/generate-br","dda.c4k-common.browser/generate-button","dda.c4k-common.browser/generate-output","dda.c4k-forgejo.browser/generate-content-div","dda.c4k-forgejo.browser/config-from-document","issuer","dda.c4k_common.browser.get_content_from_element","app-name","domain-whitelist","cljs.core.merge","dda.c4k-common.browser/get-content-from-element","js/parseInt","clojure.string/blank?","dda.c4k-forgejo.browser/validate-all!","dda.c4k-common.browser/validate!","dda.c4k_common.browser.validate_BANG_","dda.c4k-forgejo.forgejo/auth?","cljs.tools.reader.edn/read-string","dda.c4k-common.browser/set-form-validated!","dda.c4k-forgejo.browser/add-validate-listener","dda.c4k-common.browser/get-element-by-id","dda.c4k-forgejo.browser/init","dda.c4k-common.browser/append-hickory","js/document","dda.c4k-common.common/generate-common","dda.c4k-forgejo.forgejo/config-defaults","dda.c4k-forgejo.core/k8s-objects","dda.c4k-common.browser/set-output!"],"sourcesContent":["(ns dda.c4k-forgejo.browser\n  (:require\n   [clojure.string :as st]\n   [clojure.tools.reader.edn :as edn]\n   [dda.c4k-forgejo.core :as core]\n   [dda.c4k-forgejo.forgejo :as forgejo]\n   [dda.c4k-common.browser :as br]   \n   [dda.c4k-common.common :as cm]))\n\n(defn generate-group\n  [name\n   content]\n  [{:type :element\n    :tag :div\n    :attrs {:class \"rounded border border-3  m-3 p-2\"}\n    :content [{:type :element\n               :tag :b\n               :attrs {:style \"z-index: 1; position: relative; top: -1.3rem;\"}\n               :content name}\n              {:type :element\n               :tag :fieldset\n               :content content}]}])\n\n(defn generate-content []\n  (cm/concat-vec\n   [(assoc\n     (br/generate-needs-validation) :content\n     (cm/concat-vec\n      (generate-group\n       \"domain\"\n       (cm/concat-vec\n        (br/generate-input-field \"fqdn\" \"Your fqdn:\" \"repo.test.de\")\n        (br/generate-input-field \"deploy-federated\" \"Deploy a federated version of forgejo:\" \"false\")\n        (br/generate-input-field \"mailer-from\" \"Your mailer email address:\" \"test@test.de\")\n        (br/generate-input-field \"mailer-host\" \"Your mailer host:\" \"test.de\")\n        (br/generate-input-field \"mailer-port\" \"Your mailer port:\" \"123\")\n        (br/generate-input-field \"service-noreply-address\" \"Your noreply domain:\" \"test.de\")\n        (br/generate-input-field \"issuer\" \"(Optional) Your issuer prod/staging:\" \"\")\n        (br/generate-input-field \"app-name\" \"(Optional) Your app name:\" \"\")\n        (br/generate-input-field \"domain-whitelist\" \"(Optional) Domain whitelist for registration email-addresses:\" \"\")))\n      (generate-group\n       \"provider\"\n       (cm/concat-vec\n        (br/generate-input-field \"volume-total-storage-size\" \"Your forgejo volume-total-storage-size:\" \"20\")))\n      (generate-group\n       \"credentials\"\n       (br/generate-text-area\n        \"auth\" \"Your auth.edn:\"\n        \"{:postgres-db-user \\\"forgejo\\\"\n         :postgres-db-password \\\"forgejo-db-password\\\"\n         :mailer-user \\\"test@test.de\\\"\n         :mailer-pw \\\"mail-test-password\\\"}\"\n        \"5\"))\n      [(br/generate-br)]\n      (br/generate-button \"generate-button\" \"Generate c4k yaml\")))]\n   (br/generate-output \"c4k-forgejo-output\" \"Your c4k deployment.yaml:\" \"25\")))\n\n(defn generate-content-div\n  []\n  {:type :element\n   :tag :div\n   :content\n   (generate-content)})\n\n(defn config-from-document []\n  (let [issuer (br/get-content-from-element \"issuer\" :optional true)\n        app-name (br/get-content-from-element \"app-name\" :optional true)\n        domain-whitelist (br/get-content-from-element \"domain-whitelist\" :optional true)]\n    (merge\n     {:fqdn (br/get-content-from-element \"fqdn\")\n      :deploy-federated (br/get-content-from-element \"deploy-federated\")\n      :mailer-from (br/get-content-from-element \"mailer-from\")\n      :mailer-host (br/get-content-from-element \"mailer-host\")\n      :mailer-port (br/get-content-from-element \"mailer-port\")\n      :service-noreply-address (br/get-content-from-element \"service-noreply-address\")\n      :volume-total-storage-size (br/get-content-from-element \"volume-total-storage-size\" :deserializer js/parseInt)}     \n     (when (not (st/blank? issuer))\n       {:issuer issuer})\n     (when (not (st/blank? app-name))\n       {:default-app-name app-name})\n     (when (not (st/blank? domain-whitelist))\n       {:service-domain-whitelist domain-whitelist})\n     )))\n\n(defn validate-all! []\n  (br/validate! \"fqdn\" ::forgejo/fqdn)\n  (br/validate! \"deploy-federated\" ::forgejo/deploy-federated)\n  (br/validate! \"mailer-from\" ::forgejo/mailer-from)\n  (br/validate! \"mailer-host\" ::forgejo/mailer-host)\n  (br/validate! \"mailer-port\" ::forgejo/mailer-port)\n  (br/validate! \"service-noreply-address\" ::forgejo/service-noreply-address)\n  (br/validate! \"issuer\" ::forgejo/issuer :optional true)\n  (br/validate! \"app-name\" ::forgejo/default-app-name :optional true)\n  (br/validate! \"domain-whitelist\" ::forgejo/service-domain-whitelist :optional true)  \n  (br/validate! \"volume-total-storage-size\" ::forgejo/volume-total-storage-size :deserializer js/parseInt)\n  (br/validate! \"auth\" forgejo/auth? :deserializer edn/read-string)\n  (br/set-form-validated!))\n\n(defn add-validate-listener [name]\n  (-> (br/get-element-by-id name)\n      (.addEventListener \"blur\" #(do (validate-all!)))))\n\n\n(defn init []\n  (br/append-hickory (generate-content-div))\n  (-> js/document\n      (.getElementById \"generate-button\")\n      (.addEventListener \"click\"\n                         #(do (validate-all!)\n                              (-> (cm/generate-common\n                                   (config-from-document)\n                                   (br/get-content-from-element \"auth\" :deserializer edn/read-string)\n                                   forgejo/config-defaults\n                                   core/k8s-objects)\n                               (br/set-output!)))))\n  (add-validate-listener \"fqdn\")\n  (add-validate-listener \"deploy-federated\")\n  (add-validate-listener \"mailer-from\")\n  (add-validate-listener \"mailer-host\")\n  (add-validate-listener \"mailer-port\")\n  (add-validate-listener \"service-noreply-address\")\n  (add-validate-listener \"app-name\")\n  (add-validate-listener \"domain-whitelist\")  \n  (add-validate-listener \"volume-total-storage-size\")\n  (add-validate-listener \"issuer\")\n  (add-validate-listener \"auth\"))"]}