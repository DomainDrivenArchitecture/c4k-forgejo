{"version":3,"sources":["dda/c4k_common/yaml.cljs"],"mappings":";;AAQA,+CAAA,/CAAMA,sGAAoBC;AAA1B,AACE,SAAI,OAASA,wBAAO,kBAAAC,jBAAUD;;AAEhC,AAAA;;;kCAAA,lCAAWM,4EACRN;AADH,AAEE,4KAAA,2EAAA,hPAACS,0DAAQ,AAACC,kDAAUV;;;AAFtB,AAAAE,yBAAA,AAAA,6GAAA,AAAA,itBAAA,AAAAC,2BAAA,AAAAC,wDAAA,AAAA,kVAAA,AAAAC,yBAAA,mFAAA,8DAAA,mFAAA,AAAAD,wDAAA,AAAA,yGAAA,KAAA,cAAA,AAAA,mRAAA,KAAA,MAAA,AAAA,kVAAA,AAAAA,wDAAA,AAAA,kKAAA,KAAA,MAAA,AAAA,uHAAA,KAAA,AAAA,KAAA,vLAAuBG,10BACdC;AAIT,AAAA;;;gCAAA,hCAAWG,wEACRC;AADH,AAEE,OAACC,kDAAU,AAACC,qBAASF;;;AAFvB,AAAAV,yBAAA,AAAA,uGAAA,AAAA,8sBAAA,AAAAC,2BAAA,AAAAC,wDAAA,AAAA,qXAAA,AAAAC,yBAAA,mFAAA,2DAAA,mFAAA,AAAAD,wDAAA,AAAA,kKAAA,KAAA,cAAA,AAAA,yTAAA,KAAA,MAAA,AAAA,qXAAA,AAAAA,wDAAA,AAAA,yGAAA,KAAA,MAAA,AAAA,iFAAA,KAAA,AAAA,KAAA,9HAAqBI,h4BACdD;AAGP,AAAA;;;gDAAA,hDAAWQ,wGACRE;AADH,AAEE,OAACC,gDAAQ,AAACC,gBAAM,4DAAA,5DAACC,mDAASH;;;AAF5B,AAAAf,yBAAA,AAAA,yIAAA,AAAA,ytBAAA,AAAAC,2BAAA,AAAAC,wDAAA,AAAA,gYAAA,AAAAC,yBAAA,mFAAA,oEAAA,mFAAA,AAAAD,wDAAA,AAAA,sKAAA,KAAA,cAAA,AAAA,2TAAA,KAAA,MAAA,AAAA,gYAAA,AAAAA,wDAAA,AAAA,0GAAA,KAAA,MAAA,AAAA,iFAAA,KAAA,AAAA,KAAA,/HAAqCY,/4BACzBjB;AAGZ,GAAA,QAAAsB,gCAAAC,2CAAAC,gDAAAC;AAAA;AAAA,AAAA,oCAAA,iBAAAC,6BAAA,AAAAC,6CAAA,/HAAUS;IAAVR,6BAAA,AAAAD,6CAAA;IAAAE,6BAAA,AAAAF,6CAAA;IAAAG,iCAAA,AAAAH,6CAAA;IAAAI,0BAAA,AAAAC,4CAAA,mCAAA,gEAAA,iBAAAC,cAAA;AAAA,AAAA,QAAAA,4CAAAA,8CAAAA;;AAAA,AAAA,YAAAC,kBAAA,AAAAC,+CAAA,sBAAA,+DAAA,4DAAAJ,wBAAAL,2BAAAE,2BAAAC,2BAAAC,nNAAwBd;;;AAExB,kCAAA,lCAAMqB,4EAAaC;AAAnB,AACE,OAAC/B,gCAAY,AAAC6B,gEAAcE","names":["dda.c4k-common.yaml/string-or-keyword?","input","cljs.core/Keyword","cljs.spec.alpha/def-impl","cljs.spec.alpha/fspec-impl","cljs.spec.alpha.spec_impl","cljs.spec.alpha/cat-impl","dda.c4k-common.yaml/from-string","dda.c4k-common.predicate/map-or-seq?","cljs.core/string?","cljs.core.js__GT_clj","js/module$node_modules$js_yaml$dist$js_yaml_mjs.load","dda.c4k-common.yaml/to-string","edn","js/module$node_modules$js_yaml$dist$js_yaml_mjs.dump","cljs.core/clj->js","dda.c4k-common.yaml/dispatch-by-resource-name","cljs.core/keyword?","resource","cljs.core.keyword","cljs.core/first","clojure.string.split","js/dda","js/dda.c4k-common","js/dda.c4k-common.yaml","js/dda.c4k-common.yaml.load-resource","method-table__5642__auto__","cljs.core.atom","prefer-table__5643__auto__","method-cache__5644__auto__","cached-hierarchy__5645__auto__","hierarchy__5646__auto__","cljs.core.get","fexpr__6163","cljs.core/MultiFn","cljs.core.symbol","dda.c4k-common.yaml/load-resource","dda.c4k-common.yaml/load-as-edn","resource-name"],"sourcesContent":["(ns dda.c4k-common.yaml\n  (:require\n   [\"js-yaml\" :as yaml]\n   [clojure.string :as st]\n   [orchestra.core :refer-macros [defn-spec]]\n   [shadow.resource :as rc]\n   [dda.c4k-common.predicate :as cp]))\n\n(defn string-or-keyword? [input]\n  (or (string? input) (keyword? input)))\n\n(defn-spec from-string cp/map-or-seq?\n  [input string?]\n  (js->clj (yaml/load input)\n           :keywordize-keys true))\n\n(defn-spec to-string string?\n  [edn cp/map-or-seq?]\n  (yaml/dump (clj->js  edn)))\n\n(defn-spec dispatch-by-resource-name keyword?\n  [resource string-or-keyword?]\n  (keyword (first (st/split resource #\"/\"))))\n\n(defmulti load-resource dispatch-by-resource-name)\n\n(defn load-as-edn [resource-name]\n  (from-string (load-resource resource-name)))\n"]}